{"version":3,"sources":["assets/img/logo.png","assets/img/defaultBg.jpg","assets/img/ChennaiSuperKingsLogo.png","assets/img/DeccanChargersLogo.png","assets/img/DelhiDaredevilsLogo.png","assets/img/GujaratLionsLogo.png","assets/img/KingsPunjabLogo.png","assets/img/KochiTuskersKeralaLogo.png","assets/img/KolkataKnightRidersLogo.png","assets/img/MumbaiIndiansLogo.png","assets/img/PuneWarriorsIndiaLogo.png","assets/img/RajasthanRoyalsLogo.png","assets/img/RisingPuneSupergiantsLogo.png","assets/img/RoyalChallengersBangalore.png","assets/img/SunrisersHyderabad.png","assets/img/SunrisersHyderabadBg.jpg","assets/img/RoyalChallengersBangaloreBg.jpg","assets/img/MumbaiIndians.jpg","assets/img/RisingPuneSupergiants.jpg","assets/img/GujaratLions.jpg","assets/img/KolkataKnightRiders.jpg","assets/img/DelhiDaredevils.jpg","assets/img/ChennaiSuperKings.jpg","assets/img/RajasthanRoyals.jpg","assets/img/DeccanChargers.jpg","assets/img/KochiTuskersKerala.jpg","assets/img/PuneWarriorsIndia.jpg","assets/img/KingsPunjab.jpg","assets/css/styles.scss","assets/css/styles-xs.scss","assets/css/colors.scss","utils/images.js","redux/constants/ActionTypes.js","redux/actions/getItem.js","redux/actions/user.js","utils/common.js","containers/layouts/Header.jsx","components/LoadingSpinner.jsx","containers/layouts/Layout.jsx","components/FilterBar.jsx","components/MatchCard.jsx","components/MatchesList.jsx","containers/Home.jsx","utils/validators.js","utils/APICaller.js","redux/actions/loading.js","containers/Login.jsx","containers/SignUp.jsx","containers/ItemDetail.jsx","containers/Profile.jsx","containers/PredictResult.jsx","containers/Root.jsx","redux/sagas/getItem.js","redux/sagas/index.js","redux/reducer/loading.js","redux/reducer/items.js","redux/reducer/user.js","redux/reducer/index.js","redux/store.js","serviceWorker.js","index.js"],"names":["module","exports","images","logo","defaultBg","ChennaiSuperKingsLogo","DeccanChargersLogo","DelhiDaredevilsLogo","GujaratLionsLogo","KingsPunjabLogo","KochiTuskersKeralaLogo","KolkataKnightRidersLogo","MumbaiIndiansLogo","PuneWarriorsIndiaLogo","RajasthanRoyalsLogo","RisingPuneSupergiantsLogo","RoyalChallengersBangalore","SunrisersHyderabad","SunrisersHyderabadBg","RoyalChallengersBangaloreBg","MumbaiIndians","RisingPuneSupergiants","GujaratLions","KolkataKnightRiders","DelhiDaredevils","ChennaiSuperKings","RajasthanRoyals","DeccanChargers","KochiTuskersKerala","PuneWarriorsIndia","KingsPunjab","imageName","ActionTypes","UPDATE_LOADING","GET_ITEMS","GET_ITEMS_SUCCESS","GET_ITEMS_FAILURE","ITEMS_FILTER_CHANGE","CLEAR_ITEMS_LIST","SAVE_USER","USER_LOGOUT","getItems","type","clearItems","itemsFilterChange","payload","logout","saveUser","routeMainStack","allTeams","icon","bg","color","allVenue","theme","colors","Header","props","dispatch","filters","pathname","location","favourite_team","search","myInp","useRef","loadData","searchValue","delayedQuery","useCallback","debounce","includes","className","style","backgroundColor","src","getImage","alt","maxWidth","maxHeight","opacity","onClick","history","push","current","focus","placeholder","onChange","event","value","target","sort","order","skip","length","ref","size","minWidth","UncontrolledDropdown","DropdownToggle","tag","caret","DropdownMenu","right","DropdownItem","divider","HeaderWithRouter","withRouter","connect","state","itemsReducer","userReducer","LoadingSpinner","width","height","colorFirst","colorSecond","strokeWidth","radiusFirst","radiusSecond","xmlns","viewBox","preserveAspectRatio","cx","cy","ng-attr-r","ng-attr-stroke-width","ng-attr-stroke","ng-attr-stroke-dasharray","fill","strokeLinecap","r","stroke","strokeDasharray","transform","attributeName","calcMode","values","keyTimes","dur","begin","repeatCount","ng-attr-stroke-dashoffset","strokeDashoffset","loading","loadingReducer","loadState","Fragment","backgroundImage","backgroundPosition","backgroundSize","children","onSortChange","Button","active","bind","this","MatchCard","item","key","date","team1","team2","venue","city","season","borderTopColor","getImages","MatchCardWithRouter","MatchesList","matches","isScrolling","registerChild","onChildScroll","scrollTop","disableHeight","autoHeight","onScroll","overscanRowCount","rowCount","rowHeight","rowRenderer","index","isVisible","items","itemsApiInProgress","totalItemCount","useEffect","pageStart","loadMore","hasMore","loader","isValidPassword","test","isValidEmail","isEmptyString","APICaller","method","reqUrl","data","headers","Accept","Promise","resolve","reject","a","user","localStorage","getItem","JSON","parse","token","url","process","Authorization","options","toLowerCase","axios","then","response","catch","error","updateLoadingAction","useState","email","setEmail","validationEmailMsg","setValidationEmailMsg","password","setPassword","validationPasswordMsg","setValidationPasswordMsg","validationMsg","setValidationMsg","isModalOpen","setIsModalOpen","closeModal","validateForm","touchedElem","hasInvalidEmail","hasInvalidPassword","handleInputChange","ev","name","Modal","isOpen","toggle","centered","backdrop","ModalBody","Form","onSubmit","preventDefault","formData","res","_id","setItem","stringify","err","FormGroup","Label","for","Input","invalid","FormFeedback","maxLength","Alert","ModalFooter","to","padding","username","setUsername","validationUsernameMsg","setValidationUsernameMsg","favourite","setFavourite","hasInValidEmail","hasInValidPassword","hasInValidUsername","errors","minLength","id","Object","keys","map","teamName","keysMaping","toss_winner","toss_decision","result","dl_applied","winner","win_by_runs","win_by_wickets","player_of_match","umpire1","umpire2","umpire3","ItemDetail","window","scrollTo","disabled","margin","border","fontWeight","firstTeam","setFirstTeam","validationFirstTeamMsg","setValidationFirstTeamMsg","secondTeam","setSecondTeam","validationSecondTeamMsg","setValidationSecondTeamMsg","venu","setVenu","validationVenuMsg","setValidationVenuMsg","tossWinner","setTossWinner","validationTossWinnerMsg","setValidationTossWinnerMsg","setResult","hasInValidFirstTeam","hasInValidSecondTeam","hasInValidVenu","hasInValidTossWinner","secondTeamOption","filter","team","urlParms","entries","val","join","CustomInput","venuName","Root","isEmpty","path","exact","component","Login","SignUp","Home","Profile","PredictResult","RootWithRouter","root","select","limit","trim","call","put","all","takeLatest","fork","initialState","action","assign","clear","rootReducer","combineReducers","sagaMiddleware","createSagaMiddleware","store","createStore","applyMiddleware","run","rootsaga","Boolean","hostname","match","ReactDOM","render","basename","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"2GAAAA,EAAOC,QAAU,IAA0B,kC,oBCA3CD,EAAOC,QAAU,IAA0B,uC,oBCA3CD,EAAOC,QAAU,IAA0B,mD,oBCA3CD,EAAOC,QAAU,IAA0B,gD,oBCA3CD,EAAOC,QAAU,IAA0B,iD,oBCA3CD,EAAOC,QAAU,IAA0B,8C,oBCA3CD,EAAOC,QAAU,IAA0B,6C,oBCA3CD,EAAOC,QAAU,IAA0B,oD,oBCA3CD,EAAOC,QAAU,IAA0B,qD,oBCA3CD,EAAOC,QAAU,IAA0B,+C,oBCA3CD,EAAOC,QAAU,IAA0B,mD,oBCA3CD,EAAOC,QAAU,IAA0B,iD,oBCA3CD,EAAOC,QAAU,IAA0B,uD,oBCA3CD,EAAOC,QAAU,IAA0B,uD,oBCA3CD,EAAOC,QAAU,IAA0B,gD,oBCA3CD,EAAOC,QAAU,IAA0B,kD,oBCA3CD,EAAOC,QAAU,IAA0B,yD,oBCA3CD,EAAOC,QAAU,IAA0B,2C,oBCA3CD,EAAOC,QAAU,IAA0B,mD,oBCA3CD,EAAOC,QAAU,IAA0B,0C,oBCA3CD,EAAOC,QAAU,IAA0B,iD,oBCA3CD,EAAOC,QAAU,IAA0B,6C,oBCA3CD,EAAOC,QAAU,IAA0B,+C,oBCA3CD,EAAOC,QAAU,IAA0B,6C,oBCA3CD,EAAOC,QAAU,IAA0B,4C,oBCA3CD,EAAOC,QAAU,IAA0B,gD,oBCA3CD,EAAOC,QAAU,IAA0B,+C,oBCA3CD,EAAOC,QAAU,IAA0B,yC,0DCC3CD,EAAOC,QAAU,CAAC,MAAQ,UAAU,QAAU,Y,oBCA9CD,EAAOC,QAAU,CAAC,MAAQ,UAAU,QAAU,Y,mBCA9CD,EAAOC,QAAU,CAAC,MAAQ,UAAU,QAAU,Y,8vBC4BxCC,GAAS,CACbC,SACAC,cACAC,0BACAC,uBACAC,wBACAC,qBACAC,oBACAC,2BACAC,4BACAC,sBACAC,0BACAC,wBACAC,8BACAC,8BACAC,uBACAC,yBACAC,iCACAC,mBACAC,2BACAC,kBACAC,yBACAC,qBACAC,uBACAC,qBACAC,oBACAC,wBACAC,uBACAC,kBAEa,YAASC,GACtB,OAAO7B,GAAO6B,ICjDDC,GAXK,CAClBC,eAAgB,iBAChBC,UAAW,YACXC,kBAAmB,oBACnBC,kBAAmB,oBACnBC,oBAAqB,sBACrBC,iBAAkB,mBAClBC,UAAW,YACXC,YAAa,eCNFC,GAAW,WACtB,MAAO,CACLC,KAAMV,GAAYE,YAITS,GAAa,WACxB,MAAO,CACLD,KAAMV,GAAYM,mBAITM,GAAoB,SAAAC,GAAO,MAAK,CAC3CH,KAAMV,GAAYK,oBAClBQ,YCdWC,GAAS,iBAAO,CAC3BJ,KAAMV,GAAYQ,cAGPO,GAAW,SAAAF,GAAO,MAAK,CAClCH,KAAMV,GAAYO,UAClBM,YCRWG,GAAiB,CAAC,eAAgB,WAAY,mBAqD9CC,GAAW,CACtB,sBAAuB,CACrBC,KAAM,qBACNC,GAAI,uBACJC,MAAO,WAET,8BAA+B,CAC7BF,KAAM,4BACNC,GAAI,8BACJC,MAAO,WAET,iBAAkB,CAChBF,KAAM,oBACNC,GAAI,gBACJC,MAAO,WAET,yBAA0B,CACxBF,KAAM,4BACNC,GAAI,wBACJC,MAAO,WAET,gBAAiB,CACfF,KAAM,mBACNC,GAAI,eACJC,MAAO,WAET,wBAAyB,CACvBF,KAAM,0BACNC,GAAI,sBACJC,MAAO,WAET,kBAAmB,CACjBF,KAAM,kBACNC,GAAI,cACJC,MAAO,WAGT,mBAAoB,CAClBF,KAAM,sBACNC,GAAI,kBACJC,MAAO,WAET,sBAAuB,CACrBF,KAAM,wBACNC,GAAI,oBACJC,MAAO,WAET,mBAAoB,CAClBF,KAAM,sBACNC,GAAI,kBACJC,MAAO,WAET,kBAAmB,CACjBF,KAAM,qBACNC,GAAI,iBACJC,MAAO,WAET,uBAAwB,CACtBF,KAAM,yBACNC,GAAI,qBACJC,MAAO,WAET,gBAAiB,CACfF,KAAM,wBACNC,GAAI,oBACJC,MAAO,YAIEC,GAAW,CACtB,4CACA,0CACA,yCACA,yBACA,wBACA,mBACA,eACA,mBACA,uDACA,aACA,6CACA,yBACA,kCACA,6BACA,WACA,mBACA,YACA,kBACA,eACA,wBACA,wBACA,kBACA,oBACA,+BACA,mBACA,+CACA,+CACA,gBACA,sDACA,6BACA,mDACA,qCACA,uBACA,0BACA,sCACA,4BACA,0BACA,yBACA,qCACA,oBACA,oB,oBC/IMC,GAAUC,KAAVD,MAEFE,GAAS,SAAAC,GAAU,IAErBC,EAIED,EAJFC,SACAC,EAGEF,EAHFE,QACYC,EAEVH,EAFFI,SAAYD,SACZE,EACEL,EADFK,eALoB,EAQEH,EAAhBI,cARc,MAQL,GARK,EAShBC,EAAQC,iBAAO,MACrB,SAASC,EAASC,GAChBT,EAASf,MACTe,EAASjB,MAEX,IAAM2B,EAAeC,sBAAYC,IAASJ,EAAU,KAAM,IAmB1D,GAAI,CAAC,SAAU,WAAWK,SAASX,GACjC,OAAO,KAeT,OACE,yBACEY,UAAU,gBACVC,MAAO,CACLC,gBAAiBZ,EAAiBb,GAASa,GAAgBV,MAAQE,KAGrE,yBACEqB,IAAKC,GAAS,QACdC,IAAI,OACJJ,MAAO,CAAEK,SAAU,MAAOC,UAAW,GAAIC,QAAS,IAClDC,QAnBa,WACjBxB,EAAMyB,QAAQC,KAAK,YAoBjB,yBAAKX,UAAU,yBACC,UAAbZ,EACC,yBACEY,UAAU,gBACVS,QAAS,WACPjB,EAAMoB,QAAQC,UAGhB,kBAAC,IAAD,CAAUb,UAAU,4BACpB,2BACEA,UAAU,eACVc,YAAY,sBACZC,SA1DK,SAAAC,GAAU,IAEbC,EACRD,EADFE,OAAUD,MAEZ/B,EACEd,GAAkB,CAAEmB,OAAQ0B,EAAOE,KAAM,GAAIC,MAAO,GAAIC,KAAM,KAG5DJ,EAAMK,OAAS,GACjB1B,EAAaqB,IAkDLA,MAAO1B,EACPgC,IAAK/B,IAEND,EAAO+B,OACN,kBAAC,IAAD,CAAWE,KAAM,GAAIf,QAnDb,WAClBvB,EAASd,GAAkB,CAAEmB,OAAQ,GAAI4B,KAAM,GAAIC,MAAO,GAAIC,KAAM,KACpE3B,OAkDY,WAGN,GAGJ,yBAAKO,MAAO,CAAEwB,SAAU,KACtB,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAgBC,IAAI,IAAI5B,UAAU,yBAAyB6B,OAAK,GAC9D,kBAAC,IAAD,CAAc7B,UAAU,cAAcwB,KAAM,MAE9C,kBAACM,EAAA,EAAD,CAAcC,OAAK,GACjB,kBAACC,EAAA,EAAD,CAAcvB,QAhDF,WACpBvB,EAASd,GAAkB,CAAE+C,KAAM,GAAIC,MAAO,GAAI7B,OAAQ,MAC1DN,EAAMyB,QAAQC,KAAK,cA8CX,WACA,kBAACqB,EAAA,EAAD,CAAcC,SAAO,IACrB,kBAACD,EAAA,EAAD,CAAcvB,QAzDD,WACrBvB,EAASZ,MACTW,EAAMyB,QAAQC,KAAK,YAuDX,gBAcNuB,GAAmBC,aAAW,SAAAlD,GAAK,OAAI,kBAAC,GAAWA,MAC1CmD,gBARS,SAAAC,GACtB,MAAO,CACLlD,QAASkD,EAAMC,aAAanD,QAC5BG,eAAgB+C,EAAME,YAAYjD,kBAKvB8C,CAAyBF,ICpDzBM,GA7Ee,SAAAvD,GAAU,IAAD,EASjCA,EAPFwD,aAFmC,MAE3B,IAF2B,IASjCxD,EANFyD,cAHmC,MAG1B,IAH0B,IASjCzD,EALF0D,kBAJmC,MAItB,UAJsB,IASjC1D,EAJF2D,mBALmC,MAKrB,UALqB,IASjC3D,EAHF4D,mBANmC,MAMrB,EANqB,IASjC5D,EAFF6D,mBAPmC,MAOrB,GAPqB,IASjC7D,EADF8D,oBARmC,MAQpB,GARoB,EAUrC,OACE,yBACEN,MAAOA,EACPC,OAAQA,EACRM,MAAM,6BACNC,QAAQ,cACRC,oBAAoB,WACpBlD,UAAU,mBAEV,4BACEmD,GAAI,GACJC,GAAI,GACJC,YAAU,oBACVC,uBAAqB,mBACrBC,iBAAe,gBACfC,2BAAyB,uBACzBC,KAAK,OACLC,cAAc,QACdC,EAAGb,EACHD,YAAaA,EACbe,OAAQjB,EACRkB,gBAAgB,sCAChBC,UAAU,wBAEV,sCACEC,cAAc,YACd7F,KAAK,SACL8F,SAAS,SACTC,OAAO,oBACPC,SAAS,MACTC,IAAI,OACJC,MAAM,KACNC,YAAY,gBAGhB,4BACElB,GAAI,GACJC,GAAI,GACJC,YAAU,qBACVC,uBAAqB,mBACrBC,iBAAe,gBACfC,2BAAyB,wBACzBc,4BAA0B,yBAC1Bb,KAAK,OACLC,cAAc,QACdC,EAAGZ,EACHF,YAAaA,EACbe,OAAQhB,EACRiB,gBAAgB,sCAChBU,iBAAiB,oBACjBT,UAAU,yBAEV,sCACEC,cAAc,YACd7F,KAAK,SACL8F,SAAS,SACTC,OAAO,qBACPC,SAAS,MACTC,IAAI,OACJC,MAAM,KACNC,YAAY,kBC9DdvF,GAAUC,KAAVD,MAqCOsD,gBANS,SAAAC,GACtB,MAAO,CACLmC,QAASnC,EAAMoC,eAAeC,UAC9BpF,eAAgB+C,EAAME,YAAYjD,kBAGvB8C,EAnCA,SAAAnD,GAAU,IACfuF,EAA4BvF,EAA5BuF,QAASlF,EAAmBL,EAAnBK,eACjB,OACE,kBAAC,IAAMqF,SAAP,KACE,yBACE3E,UAAU,aACVC,MAAO,CACLC,gBAAiBZ,EACbb,GAASa,GAAgBV,MACzBE,GACJ0B,QAAS,GACToE,gBAAgB,OAAD,OAASxE,GACtBd,EAAiBb,GAASa,GAAgBX,GAAK,aADlC,KAGfkG,mBAAoB,MACpBC,eAAgB,WAGnBN,GACC,yBAAKxE,UAAU,WACb,kBAAC,GAAD,OAGJ,kBAAC,GAAD,MACA,yBAAKA,UAAU,YAAYf,EAAM8F,c,+BCpB/BjG,GAAUC,KAAVD,MAiER,IAMesD,gBANS,SAAAC,GACtB,MAAO,CACLlD,QAASkD,EAAMC,aAAanD,QAC5BG,eAAgB+C,EAAME,YAAYjD,kBAGvB8C,EArEf,SAAmBnD,GAAQ,IACjBE,EAAsCF,EAAtCE,QAASD,EAA6BD,EAA7BC,SAAUI,EAAmBL,EAAnBK,eACrB0F,EAAe,SAAA5D,GACnBlC,EAASd,GAAkB,CAAE+C,KAAM,SAAUC,QAAOC,KAAM,KAC1DnC,EAASf,MACTe,EAASjB,OAMX,OACE,yBACE+B,UAAU,wBACVC,MAAO,CACLC,gBAAiBZ,EAAiBb,GAASa,GAAgBV,MAAQE,KAGrE,wBAAIkB,UAAU,SAAd,WACA,kBAACiF,GAAA,EAAD,CAAQrG,MAAM,UAAUoB,UAAU,cAAcS,QAZ7B,WACrBxB,EAAMyB,QAAQC,KAAK,mBACnBzB,EAASd,GAAkB,CAAE+C,KAAM,GAAIC,MAAO,GAAI7B,OAAQ,QAUxD,kBAGA,kBAACmC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAgBC,IAAI,IAAI5B,UAAU,YAChC,yBAAKA,UAAU,mBACb,yBAAKA,UAAU,eAAf,QACA,kBAAC,IAAD,CAAUwB,KAAM,OAGpB,kBAACM,EAAA,EAAD,KACE,kBAACE,EAAA,EAAD,CACEkD,OAA0B,QAAlB/F,EAAQiC,MAChBX,QAASuE,EAAaG,KAAKC,KAAM,OACjCnF,MAAO,CACLC,gBACoB,QAAlBf,EAAQiC,MACJ9B,EACEb,GAASa,GAAgBV,MACzBE,GACF,SATV,uBAcA,kBAACkD,EAAA,EAAD,CACEkD,OAA0B,SAAlB/F,EAAQiC,MAChBX,QAASuE,EAAaG,KAAKC,KAAM,QACjCnF,MAAO,CACLC,gBACoB,SAAlBf,EAAQiC,MACJ9B,EACEb,GAASa,GAAgBV,MACzBE,GACF,SATV,8B,SCrDFA,GAAUC,KAAVD,MAER,SAASuG,GAAUpG,GAAQ,IACjBqG,EAA8CrG,EAA9CqG,KAAMhG,EAAwCL,EAAxCK,eAAgBiG,EAAwBtG,EAAxBsG,IAAKtF,EAAmBhB,EAAnBgB,MAAOS,EAAYzB,EAAZyB,QAClC8E,EAAiDF,EAAjDE,KAAMC,EAA2CH,EAA3CG,MAAOC,EAAoCJ,EAApCI,MAAOC,EAA6BL,EAA7BK,MAAOC,EAAsBN,EAAtBM,KAFX,EAEiCN,EAAhBO,cAFjB,MAE0B,GAF1B,EAMxB,OACE,yBAAKN,IAAKA,EAAKtF,MAAOA,GACpB,wBAAID,UAAU,iBAAiBwF,GAAcK,GAC7C,yBACE7F,UAAU,YACVS,QARU,WACdC,EAAQC,KAAK,eAAgB,CAAE2E,UAQ3BrF,MAAO,CACL6F,eAAgBxG,EACZb,GAASa,GAAgBV,MACzBE,KAGN,yBAAKkB,UAAU,uCACb,yBACEG,IAAK4F,GAAUtH,GAASgH,GAAO/G,MAC/BsB,UAAU,YACVK,IAAI,MAIR,yBAAKL,UAAU,oBACb,yBAAKA,UAAU,aAAayF,GAC5B,wBAAIzF,UAAU,iBAAd,MACA,yBAAKA,UAAU,aAAa0F,GAC5B,yBAAK1F,UAAU,SAAf,UAA2B2F,EAA3B,aAAqCC,KAEvC,yBAAK5F,UAAU,wCACb,yBACEG,IAAK4F,GAAUtH,GAASiH,GAAOhH,MAC/BsB,UAAU,YACVK,IAAI,QAQhB,IAKM2F,GAAsB7D,aAAW,SAAAlD,GAAK,OAAI,kBAACoG,GAAcpG,MAChDmD,gBANS,SAAAC,GACtB,MAAO,CACL/C,eAAgB+C,EAAME,YAAYjD,kBAIvB8C,CAAyB4D,ICGzBC,GA3DK,SAAAhH,GAAU,IACpBiH,EAAYjH,EAAZiH,QACR,OACE,yBAAKlG,UAAU,eACb,yBAAKA,UAAU,iBACb,kBAAC,KAAD,MACG,gBACC0C,EADD,EACCA,OACAyD,EAFD,EAECA,YACAC,EAHD,EAGCA,cACAC,EAJD,EAICA,cACAC,EALD,EAKCA,UALD,OAOC,yBAAKtG,UAAU,kBACb,kBAAC,KAAD,CAAWuG,eAAa,IACrB,gBAAG9D,EAAH,EAAGA,MAAH,OACC,yBAAKlB,IAAK6E,GACR,kBAAC,KAAD,CACEI,YAAU,EACV9D,OAAQA,EACRD,MAAOA,EACP6D,UAAWA,EACXH,YAAaA,EACbM,SAAUJ,EACVK,iBAAkB,EAClBC,SAAUT,EAAQ5E,OAClBsF,UAAW,IACXC,YAAa,YAMN,IALLC,EAKI,EALJA,MACAX,EAII,EAJJA,YACAY,EAGI,EAHJA,UACAxB,EAEI,EAFJA,IACAtF,EACI,EADJA,MAEA,OACE,kBAAC,GAAD,eACEqF,KAAMY,EAAQY,IACV,CACFA,QACAX,cACAY,YACAxB,MACAtF,yBCoBfmC,gBATS,SAAAC,GACtB,MAAO,CACLmC,QAASnC,EAAMoC,eAAeC,UAC9BsC,MAAO3E,EAAMC,aAAa0E,MAC1BC,mBAAoB5E,EAAMC,aAAa2E,mBACvCC,eAAgB7E,EAAMC,aAAa4E,eACnC/H,QAASkD,EAAMC,aAAanD,WAGjBiD,EA1DF,SAAAnD,GAAU,IAEnBC,EAMED,EANFC,SACA8H,EAKE/H,EALF+H,MACAtG,EAIEzB,EAJFyB,QACAuG,EAGEhI,EAHFgI,mBACA9H,EAEEF,EAFFE,QACA+H,EACEjI,EADFiI,eAEI7F,EAASlC,EAATkC,KACN8F,qBAAU,WACRjI,EAASjB,QAER,IAMH,OACE,yBAAK+B,UAAU,QACZgH,EAAM1F,OACL,oCACE,kBAAC,GAAD,CAAWZ,QAASA,IACpB,yBAAKV,UAAU,8BACb,kBAAC,KAAD,CACEoH,UAAW,EACXC,SAZK,YACdJ,GAAsB/H,EAASjB,OAYtBgC,MAAO,CAAEwC,MAAO,QAChB6E,QAASjG,EAAO6F,EAChBK,OACE,yBAAKvH,UAAU,SAASuF,IAAK,GAA7B,gBAKF,kBAAC,GAAD,CAAaW,QAASc,OAK5B,yBAAKhH,UAAU,iBACb,kBAAC,IAAD,CAAewB,KAAM,KACrB,wBAAIxB,UAAU,SAAd,wB,mGCpDGwH,GAAkB,SAAAvG,GAC7B,OAAIA,GAGA,iEAAiEwG,KAC/DxG,IAKK,yBAGJ,wBAGIyG,GAAe,SAAAzG,GAC1B,QAAIA,IAAS,4CAA4CwG,KAAKxG,KAGvD,yBAEI0G,GAAgB,SAAA1G,GAC3B,QAAIA,IAASA,EAAMK,SAGZ,qB,goBCxBT,IAmCesG,GAjCG,SAAC,GAQZ,IAAD,IAPJC,cAOI,MAPK,MAOL,EANJC,EAMI,EANJA,OAMI,IALJC,YAKI,MALG,GAKH,MAJJC,eAII,MAJM,CACR,eAAgB,mBAChBC,OAAQ,oBAEN,EACJ,OAAO,IAAIC,QAAJ,yCAAY,WAAOC,EAASC,GAAhB,0BAAAC,EAAA,sDACXC,EAAOC,aAAaC,QAAQ,QADjB,EAEOF,EAAOG,KAAKC,MAAMJ,GAAQ,GAFjC,IAEXK,aAFW,SAIbC,EAJa,UAXFC,mCAWE,gBAIcf,GAC/BE,EAAUW,EAAK,MAAQX,EAAR,CAAiBc,cAAeH,IAAUX,EAErDe,EAAU,CACZlB,SACAe,MACAb,OACAC,WAE2B,QAAzBH,EAAOmB,sBAAgCD,EAAO,KAClDE,KAAM,GAAD,GAAMF,IACRG,MAAK,SAAAC,GAEJhB,EAAQgB,MAETC,OAAM,SAAAC,GACLjB,EAAOiB,MApBM,2CAAZ,0DCXIC,GAAsB,SAAA9E,GAAO,MAAK,CAC7CtG,KAAMV,GAAYC,eAClBY,QAASmG,ICwJIpC,sBAvIf,SAAenD,GAAQ,IAAD,EACMsK,mBAAS,IADf,oBACbC,EADa,KACNC,EADM,OAEgCF,oBAAS,GAFzC,oBAEbG,EAFa,KAEOC,EAFP,OAGYJ,mBAAS,IAHrB,oBAGbK,EAHa,KAGHC,EAHG,OAIsCN,oBAAS,GAJ/C,oBAIbO,EAJa,KAIUC,EAJV,OAKsBR,mBAAS,IAL/B,oBAKbS,EALa,KAKEC,EALF,OAMkBV,oBAAS,GAN3B,oBAMbW,EANa,KAMAC,EANA,KAOpBhD,qBAAU,WACR,OAAO,WACLiD,OAED,IAEH,IAmCMC,EAAe,SAAAC,GACnB,IAAIC,EAAkB,GACpBC,EAAqB,GAUvB,OATKF,GAMHX,GAAsB,GACtBI,GAAyB,KANzBQ,EAAkB7C,GAAa8B,GAC/BgB,EAAqB7C,GAAciC,GACnCD,EAAsBY,GACtBR,EAAyBS,OAKtBhB,IAAUI,GAAYW,GAAmBC,IAM1CC,EAAoB,SAAAC,GACD,UAAnBA,EAAGxJ,OAAOyJ,KACZlB,EAASiB,EAAGxJ,OAAOD,OAEnB4I,EAAYa,EAAGxJ,OAAOD,OAExBoJ,EAAaK,EAAGxJ,OAAOyJ,OAEnBP,EAAa,WACjBD,GAAe,IAEjB,OACE,kBAACS,GAAA,EAAD,CACEC,OAAQX,EACRY,OAAQ,aACR9K,UAAU,QACV+K,UAAQ,EACRC,UAAU,GAEV,kBAACC,GAAA,EAAD,CAAWjL,UAAU,cACnB,wBAAIA,UAAU,SAAd,iBACA,kBAACkL,GAAA,EAAD,CAAMC,SA1ES,SAAAT,GAInB,GAHAA,EAAGU,iBACaf,IAEH,CACX,IAAMgB,EAAW,CACf7B,QACAI,YAGF3K,EAAMC,SAASoK,IAAoB,IACnC1B,GAAU,CACRC,OAAQ,OACRC,OAAQ,cACRC,KAAMsD,IAELnC,MAAK,SAAAoC,UACGA,EAAIvD,KAAKwD,IAChBhD,aAAaiD,QAAQ,OAAQ/C,KAAKgD,UAAUH,EAAIvD,OAChD9I,EAAMC,SAASX,GAAS+M,EAAIvD,OAC5B9I,EAAMC,SAASoK,IAAoB,IAEnCrK,EAAMyB,QAAQC,KAAK,YAEpByI,OAAM,SAAAsC,GACLzM,EAAMC,SAASoK,IAAoB,IACT,iBAAtBoC,EAAIvC,SAASpB,KACfkC,EAAiB,kCAEjBA,EAAiB,oCA8CnB,kBAAC0B,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAOC,IAAI,SAAX,SACA,kBAACC,GAAA,EAAD,CACEC,UAASrC,EACTxL,KAAK,QACL6C,SAAU0J,EACVE,KAAK,QACL1J,MAAOuI,EACP1I,YAAY,gBAEd,kBAACkL,GAAA,EAAD,KACGtC,GAA0C,KAG/C,kBAACiC,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAOC,IAAI,YAAX,WACA,kBAACC,GAAA,EAAD,CACEC,UAASjC,EACT5L,KAAK,WACL6C,SAAU0J,EACVE,KAAK,WACLsB,UAAW,IACXhL,MAAO2I,EACP9I,YAAY,mBAEd,kBAACkL,GAAA,EAAD,KACGlC,GAAgD,KAGrD,kBAACoC,GAAA,EAAD,CAAOtN,MAAM,SAASiM,SAAQb,GAC3BA,GAEH,kBAAC/E,GAAA,EAAD,CAAQrG,MAAM,YAAYV,KAAK,SAAS8B,UAAU,aAAlD,WAKJ,kBAACmM,GAAA,EAAD,CAAanM,UAAU,gBAAvB,8BAEE,kBAAC,IAAD,CAAMoM,GAAG,UAAUnM,MAAO,CAAEoM,QAAS,aAArC,gBC0EOjK,sBAzMf,SAAgBnD,GAAQ,IAAD,EACWsK,mBAAS,IADpB,oBACd+C,EADc,KACJC,EADI,OAEqChD,oBAAS,GAF9C,oBAEdiD,EAFc,KAESC,EAFT,OAGalD,mBAAS,uBAHtB,oBAGdmD,EAHc,KAGHC,EAHG,OAIKpD,mBAAS,IAJd,oBAIdC,EAJc,KAIPC,EAJO,OAK+BF,oBAAS,GALxC,oBAKdG,EALc,KAKMC,EALN,OAMWJ,mBAAS,IANpB,oBAMdK,EANc,KAMJC,EANI,OAOqCN,oBAAS,GAP9C,oBAOdO,EAPc,KAOSC,EAPT,OAQqBR,mBAAS,IAR9B,oBAQdS,EARc,KAQCC,EARD,OASiBV,oBAAS,GAT1B,oBASdW,EATc,KASDC,EATC,KAUrBhD,qBAAU,WACR,OAAO,WACLiD,OAED,IAEH,IAyCMC,EAAe,SAAAC,GACnB,IAAIsC,EAAkB,GACpBC,EAAqB,GACrBC,EAAqB,GAavB,OAZKxC,GAQHX,GAAsB,GACtBI,GAAyB,GACzB0C,GAAyB,KATzBG,EAAkBlF,GAAa8B,GAC/BqD,EAAqBrF,GAAgBoC,GACrCkD,EAAqBnF,GAAc2E,GACnC3C,EAAsBiD,GACtB7C,EAAyB8C,GACzBJ,EAAyBK,OAOxBtD,IACAI,GACDgD,GACAC,GACAC,IAOErC,EAAoB,SAAAC,GACD,UAAnBA,EAAGxJ,OAAOyJ,KACZlB,EAASiB,EAAGxJ,OAAOD,OACS,aAAnByJ,EAAGxJ,OAAOyJ,KACnB4B,EAAY7B,EAAGxJ,OAAOD,OAEtB4I,EAAYa,EAAGxJ,OAAOD,OAExBoJ,EAAaK,EAAGxJ,OAAOyJ,OAGnBP,EAAa,WACjBD,GAAe,IAEjB,OACE,kBAACS,GAAA,EAAD,CACEC,OAAQX,EACRY,OAAQ,aACR9K,UAAU,QACV+K,UAAQ,EACRC,UAAU,GAEV,kBAACC,GAAA,EAAD,CAAWjL,UAAU,cACnB,wBAAIA,UAAU,SAAd,mBACA,kBAACkL,GAAA,EAAD,CAAMC,SA7FS,SAAAT,GAInB,GAHAA,EAAGU,iBACaf,IAEH,CACX,IAAMgB,EAAW,CACf7B,QACAI,WACA0C,WACAhN,eAAgBoN,GAGlBzN,EAAMC,SAASoK,IAAoB,IACnC1B,GAAU,CACRC,OAAQ,OACRC,OAAQ,eACRC,KAAMsD,IAELnC,MAAK,SAAAoC,GACJrM,EAAMC,SAASoK,IAAoB,IACnCrK,EAAMyB,QAAQC,KAAK,aAEpByI,OAAM,SAAAsC,GACLzM,EAAMC,SAASoK,IAAoB,IADvB,MAMRoC,EAAIvC,SAHNpB,KACEgF,OAJQ,IAIEvD,aAJF,MAIU,GAJV,MAIc8C,gBAJd,MAIyB,GAJzB,EAOR9C,GACFG,EAAsB,4BAEpB2C,EACFG,EAAyBH,GAEzBrC,EAAiB,oCA2DnB,kBAAC0B,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAOC,IAAI,SAAX,aACA,kBAACC,GAAA,EAAD,CACEC,UAASS,EACTtO,KAAK,OACL6C,SAAU0J,EACVE,KAAK,WACLsB,UAAW,GACXe,UAAW,EACX/L,MAAOqL,EACPxL,YAAY,oBAEd,kBAACkL,GAAA,EAAD,KACGQ,GAAgD,KAGrD,kBAACb,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAOC,IAAI,iBAAX,kBACA,kBAACC,GAAA,EAAD,CACE5N,KAAK,SACLyM,KAAK,YACLsC,GAAG,YACHnM,YAAY,wBACZC,SAAU,SAAAC,GACR2L,EAAa3L,EAAME,OAAOD,QAE5BA,MAAOyL,GAENQ,OAAOC,KAAK1O,IAAU2O,KAAI,SAACC,EAAU9H,GAAX,OACzB,4BAAQA,IAAKA,GAAM8H,QAIzB,kBAAC1B,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAOC,IAAI,SAAX,SACA,kBAACC,GAAA,EAAD,CACEC,UAASrC,EACTxL,KAAK,QACL6C,SAAU0J,EACVE,KAAK,QACL1J,MAAOuI,EACP1I,YAAY,gBAEd,kBAACkL,GAAA,EAAD,KACGtC,GAA0C,KAI/C,kBAACiC,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAOC,IAAI,YAAX,WACA,kBAACC,GAAA,EAAD,CACEC,UAASjC,EACT5L,KAAK,WACL6C,SAAU0J,EACVE,KAAK,WACLsB,UAAW,IACXe,UAAW,EACX/L,MAAO2I,EACP9I,YAAY,mBAEd,kBAACkL,GAAA,EAAD,KACGlC,GAAgD,KAGrD,6BACE,4DACA,4BACE,uDACA,mDACA,yDACA,4DACA,8DAGJ,kBAACoC,GAAA,EAAD,CAAOtN,MAAM,SAASiM,SAAQb,GAC3BA,GAEH,kBAAC/E,GAAA,EAAD,CAAQrG,MAAM,YAAYV,KAAK,SAAS8B,UAAU,aAAlD,aAKJ,kBAACmM,GAAA,EAAD,CAAanM,UAAU,gBAAvB,4BAEE,kBAAC,IAAD,CAAMoM,GAAG,SAASnM,MAAO,CAAEoM,QAAS,aAApC,cCtNFiB,GAAa,CACjBzH,OAAQ,SACRL,KAAM,OACNC,MAAO,aACPC,MAAO,cACP6H,YAAa,mBACbC,cAAe,gBACfC,OAAQ,SACRC,WAAY,aACZC,OAAQ,SACRC,YAAa,cACbC,eAAgB,iBAChBC,gBAAiB,kBACjBnI,MAAO,QACPC,KAAM,OACNmI,QAAS,UACTC,QAAS,UACTC,QAAS,WA8CIC,GA3CI,SAAAjP,GAIjB,GAHAkI,qBAAU,WACRgH,OAAOC,SAAS,EAAG,KAClB,CAACnP,EAAMI,WACNJ,EAAMI,WAAaJ,EAAMI,SAASgD,MAEpC,OADApD,EAAMyB,QAAQC,KAAK,SACZ,8BACD,IACE2E,EAASrG,EAAMI,SAASgD,MAAxBiD,KACR,OACE,yBAAKtF,UAAU,mBACb,yBAAKA,UAAU,mBACb,wBAAIA,UAAU,SAAd,iBACC,CACC,SACA,OACA,QACA,QACA,QACA,OACA,cACA,gBACA,SACA,aACA,SACA,cACA,iBACA,kBACA,UACA,UACA,WACAoN,KAAI,SAAC7H,EAAKuB,GAAN,OACJ,yBAAK9G,UAAU,sBAAsBuF,IAAKuB,GACxC,wBAAI9G,UAAU,OAAOsN,GAAW/H,IAChC,wBAAIvF,UAAU,SAASsF,EAAKC,W,ilBC3ClCzG,GAAUC,KAAVD,MAoHOsD,gBALS,SAAAC,GACtB,MAAO,CACLiG,KAAMjG,EAAME,eAGDH,EAlHC,SAAAnD,GAAU,IAAD,EACqBA,EAAMqJ,KAA1CgE,EADe,EACfA,SAAU9C,EADK,EACLA,MAAOlK,EADF,EACEA,eADF,EAEWiK,mBAASjK,GAFpB,oBAEhBoN,EAFgB,KAELC,EAFK,OAGmBpD,mBAAS,IAH5B,oBAGhBS,EAHgB,KAGDC,EAHC,KAIvB9C,qBAAU,WACRgH,OAAOC,SAAS,EAAG,KAClB,CAACnP,EAAMI,WACV8H,qBAAU,WACRwF,EAAarN,KACZ,CAACA,IA8BJ,OACE,yBAAKU,UAAU,iBACb,yBAAKA,UAAU,gCACb,wBAAIA,UAAU,SAAd,cACA,kBAACkL,GAAA,EAAD,CAAMC,SAjCS,SAAAT,GACnBA,EAAGU,iBAEH,IAAMC,EAAW,CACf7B,QACAlK,eAAgBoN,GAElBzN,EAAMC,SAASoK,IAAoB,IACnC1B,GAAU,CACRC,OAAQ,OACRC,OAAQ,eACRC,KAAMsD,IAELnC,MAAK,SAAAoC,GACJrM,EAAMC,SAASoK,IAAoB,IACnCf,aAAaiD,QACX,OACA/C,KAAKgD,UAAL,MAAoBxM,EAAMqJ,KAA1B,CAAgChJ,eAAgBoN,MAGlDzN,EAAMC,SAASX,GAAS,MAAKU,EAAMqJ,KAAZ,CAAkBhJ,eAAgBoN,MACzDzN,EAAMyB,QAAQC,KAAK,YAEpByI,OAAM,SAAAsC,GACLzM,EAAMC,SAASoK,IAAoB,IACnCW,EAAiB,mCASf,kBAAC0B,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAOC,IAAI,SAAX,aACA,kBAACC,GAAA,EAAD,CACEuC,UAAQ,EACRnQ,KAAK,OACLyM,KAAK,WACLsB,UAAW,GACXe,UAAW,EACX/L,MAAOqL,EACPxL,YAAY,qBAGhB,kBAAC6K,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAOC,IAAI,SAAX,SACA,kBAACC,GAAA,EAAD,CACEuC,UAAQ,EACRnQ,KAAK,QACLyM,KAAK,QACL1J,MAAOuI,EACP1I,YAAY,iBAIhB,kBAAC6K,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAOC,IAAI,iBAAX,kBACA,kBAACC,GAAA,EAAD,CACE5N,KAAK,SACLyM,KAAK,YACLsC,GAAG,YACHnM,YAAY,wBACZC,SAAU,SAAAC,GACR2L,EAAa3L,EAAME,OAAOD,QAE5BA,MAAOyL,GAENQ,OAAOC,KAAK1O,IAAU2O,KAAI,SAACC,EAAU9H,GAAX,OACzB,4BAAQA,IAAKA,GAAM8H,QAIzB,kBAACnB,GAAA,EAAD,CAAOtN,MAAM,SAASiM,SAAQb,GAC3BA,GAEH,kBAAC/E,GAAA,EAAD,CACErG,MAAM,YACNV,KAAK,SAEL+B,MAAO,CACLwC,MAAO,OACP6L,OAAQ,cACRC,OAAQ,EACRC,WAAY,OACZtO,gBAAiBZ,EACbb,GAASa,GAAgBV,MACzBE,KAXR,c,UCjFFA,GAAUC,KAAVD,MAsOOsD,gBALS,SAAAC,GACtB,MAAO,CACL/C,eAAgB+C,EAAME,YAAYjD,kBAGvB8C,EApOO,SAAAnD,GAAU,IACtBK,EAAmBL,EAAnBK,eADqB,EAEKiK,mBAAS,IAFd,oBAEtBkF,EAFsB,KAEXC,EAFW,OAG+BnF,oBAAS,GAHxC,oBAGtBoF,EAHsB,KAGEC,EAHF,OAIOrF,mBAAS,IAJhB,oBAItBsF,EAJsB,KAIVC,EAJU,OAKiCvF,oBAAS,GAL1C,oBAKtBwF,EALsB,KAKGC,EALH,OAMLzF,mBAAS,IANJ,oBAMtB0F,EANsB,KAMhBC,EANgB,OAOqB3F,oBAAS,GAP9B,oBAOtB4F,EAPsB,KAOHC,EAPG,OAQO7F,mBAAS,IARhB,oBAQtB8F,EARsB,KAQVC,EARU,OASiC/F,oBAAS,GAT1C,oBAStBgG,EATsB,KASGC,EATH,OAUajG,mBAAS,IAVtB,oBAUtBS,EAVsB,KAUPC,EAVO,OAYDV,mBAAS,IAZR,oBAYtBkE,EAZsB,KAYdgC,EAZc,KAe7BtI,qBAAU,WACRgH,OAAOC,SAAS,EAAG,KAClB,CAACnP,EAAMI,WAEV,IAkCMgL,EAAe,SAAAC,GACnB,IAAIoF,EAAsB,GACxBC,EAAuB,GACvBC,EAAiB,GACjBC,EAAuB,GAgBzB,OAfKvF,GAUHsE,GAA0B,GAC1BI,GAA2B,GAC3BI,GAAqB,GACrBI,GAA2B,KAZ3BE,EAAsB/H,GAAc8G,GACpCkB,EAAuBhI,GAAckH,GACrCe,EAAiBjI,GAAcsH,GAC/BY,EAAuBlI,GAAc0H,GACrCT,EAA0Bc,GAC1BV,EAA2BW,GAC3BP,EAAqBQ,GACrBJ,EAA2BK,QAQ1BpB,GACAI,GACAI,GACAI,IACDK,GACAC,GACAC,GACAC,IAMAC,EAAmB5C,OAAOC,KAAK1O,IAAUsR,QAC3C,SAAAC,GAAI,OAAIA,IAASvB,KAEnB,OACE,yBAAKzO,UAAU,iBACb,yBAAKA,UAAU,gCACb,wBAAIA,UAAU,SAAd,kBACA,kBAACkL,GAAA,EAAD,CAAMC,SA3ES,SAAAT,GAInB,GAHAA,EAAGU,iBAEaf,IACH,CACX,IAAMgB,EAAW,CACf5F,MAAOgJ,EACP/I,MAAOmJ,EACPI,OACA1B,YAAa8B,GAEXY,EAAW/C,OAAOgD,QAAQ7E,GAC3B+B,KAAI,oCAAE7H,EAAF,KAAO4K,EAAP,qBAAmB5K,EAAnB,YAA0B4K,MAC9BC,KAAK,KAERnR,EAAMC,SAASoK,IAAoB,IACnCmG,EAAU,IACV7H,GAAU,CACRC,OAAQ,MACRC,OAAO,iBAAD,OAAmBmI,KAExB/G,MAAK,SAAAoC,GACJrM,EAAMC,SAASoK,IAAoB,IACnC,CAACmF,EAAWI,GAAY9O,SAASuL,EAAIvD,MACjC0H,EAAUnE,EAAIvD,MACd0H,EAAUJ,MAEfjG,OAAM,SAAAsC,GACLzM,EAAMC,SAASoK,IAAoB,IACnCW,EAAiB,oCA+CjB,kBAAC0B,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAOC,IAAI,iBAAX,cACA,kBAACwE,GAAA,EAAD,CACEtE,UAAS4C,EACTzQ,KAAK,SACLyM,KAAK,YACLsC,GAAG,YACHlM,SAAU,SAAAC,GACR0N,EAAa1N,EAAME,OAAOD,OACtBD,EAAME,OAAOD,QAAU4N,GACzBC,EAAc,IAEhBzE,EAAarJ,EAAME,OAAOyJ,OAE5B1J,MAAOwN,GAEP,4BAAQxN,MAAM,IAAd,oBACCiM,OAAOC,KAAK1O,IAAU2O,KAAI,SAACC,EAAU9H,GAAX,OACzB,4BAAQA,IAAKA,GAAM8H,OAGvB,kBAACrB,GAAA,EAAD,KACG2C,GAAkD,KAGvD,kBAAChD,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAOC,IAAI,iBAAX,eACA,kBAACwE,GAAA,EAAD,CACEtE,UAASgD,EACT7Q,KAAK,SACLyM,KAAK,aACLsC,GAAG,aACHlM,SAAU,SAAAC,GACR8N,EAAc9N,EAAME,OAAOD,OAC3BoJ,EAAarJ,EAAME,OAAOyJ,OAE5B1J,MAAO4N,GAEP,4BAAQ5N,MAAM,IAAd,sBACC6O,EAAiB1C,KAAI,SAACC,EAAU9H,GAAX,OACpB,4BAAQA,IAAKA,GAAM8H,OAGvB,kBAACrB,GAAA,EAAD,KACG+C,GAAoD,KAGzD,kBAACpD,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAOC,IAAI,iBAAX,QACA,kBAACwE,GAAA,EAAD,CACEtE,UAASoD,EACTjR,KAAK,SACLyM,KAAK,OACLsC,GAAG,OACHlM,SAAU,SAAAC,GACRkO,EAAQlO,EAAME,OAAOD,OACrBoJ,EAAarJ,EAAME,OAAOyJ,OAE5B1J,MAAOgO,GAEP,4BAAQhO,MAAM,IAAd,gBACCpC,GAASuO,KAAI,SAACkD,EAAU/K,GAAX,OACZ,4BAAQA,IAAKA,GAAM+K,OAGvB,kBAACtE,GAAA,EAAD,KACGmD,GAAwC,KAG7C,kBAACxD,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAOC,IAAI,iBAAX,oBACA,kBAACwE,GAAA,EAAD,CACEtE,UAASwD,EACTrR,KAAK,SACLyM,KAAK,aACLsC,GAAG,aACHlM,SAAU,SAAAC,GACRsO,EAActO,EAAME,OAAOD,OAC3BoJ,EAAarJ,EAAME,OAAOyJ,OAE5B1J,MAAOoO,GAEP,4BAAQpO,MAAM,IACXwN,GAAaI,EACV,0BACA,gCAELJ,GAAaI,EACV,CAACJ,EAAWI,GAAYzB,KAAI,SAACC,EAAU9H,GAAX,OAC1B,4BAAQA,IAAKA,GAAM8H,WAErB,GAEN,kBAACrB,GAAA,EAAD,KACGuD,GAAoD,KAIzD,kBAACrD,GAAA,EAAD,CAAOtN,MAAM,SAASiM,SAAQb,GAC3BA,GAEH,kBAAC/E,GAAA,EAAD,CACErG,MAAM,YACNV,KAAK,SAEL+B,MAAO,CACLwC,MAAO,OACP6L,OAAQ,cACRC,OAAQ,EACRC,WAAY,OACZtO,gBAAiBZ,EACbb,GAASa,GAAgBV,MACzBE,KAXR,YAiBF,kBAACoN,GAAA,EAAD,CAAOtN,MAAM,UAAUiM,OAAQ4C,EAAQ3C,OAxM3B,kBAAM2E,EAAU,MAyM1B,wBAAIzP,UAAU,iBAAd,sBACA,6BACA,uBAAGA,UAAU,QAAQyN,S,+NC3N/B,IAAM8C,GAAO,SAAAtR,GAAU,IAEnByB,EAGEzB,EAHFyB,QACAxB,EAEED,EAFFC,SACYE,EACVH,EADFI,SAAYD,SAsCd,OApCA+H,qBAAU,WACR,IAAMmB,EAAOG,KAAKC,MAAMH,aAAaC,QAAQ,SACxCgI,IAAQlI,GA8BX5H,EAAQC,KAAK,WA7BbzB,EAASX,GAAS+J,IAClBpJ,EAASoK,IAAoB,IAC7B1B,GAAU,CACRC,OAAQ,MACRC,OAAQ,qBAEPoB,MAAK,SAAAoC,UACGA,EAAIvD,KAAKwD,IAChBrM,EAASX,GAAS+M,EAAIvD,OAClBuD,EAAIvD,KAAKzI,iBAAmBgJ,EAAKhJ,gBACnCiJ,aAAaiD,QACX,OACA/C,KAAKgD,U,2WAAL,IACKnD,EADL,CAEEhJ,eAAgBgM,EAAIvD,KAAKzI,mBAI/BJ,EAASoK,IAAoB,KAC5B9K,GAAeuB,SAASX,IAAasB,EAAQC,KAAK,YAEpDyI,OAAM,SAAAsC,GACLxM,EAASoK,IAAoB,IAC7B5I,EAAQC,KAAK,UACT+K,EAAIvC,UAAkC,iBAAtBuC,EAAIvC,SAASpB,MAC/B7I,EAASZ,YAOhB,IAED,kBAAC,GAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOmS,KAAK,SAASC,OAAK,EAACC,UAAWC,KACtC,kBAAC,IAAD,CAAOH,KAAK,UAAUC,OAAK,EAACC,UAAWE,KAEvC,kBAAC,IAAD,CAAOJ,KAAK,QAAQC,OAAK,EAACC,UAAWG,KACrC,kBAAC,IAAD,CAAOL,KAAK,eAAeC,OAAK,EAACC,UAAWzC,KAC5C,kBAAC,IAAD,CAAOuC,KAAK,WAAWC,OAAK,EAACC,UAAWI,KACxC,kBAAC,IAAD,CAAON,KAAK,kBAAkBC,OAAK,EAACC,UAAWK,KAE/C,kBAAC,IAAD,CAAU5E,GAAG,cAMf6E,GAAiB9O,aAAW,SAAAlD,GAAK,OAAI,kBAAC,GAASA,MACtCmD,iBAAU6O,I,yCC3ERhT,I,aAuBQiT,IAvBlB,SAAUjT,KAAV,gGACW,OADX,SACiBkT,cAAO,SAAA9O,GAAK,OAAIA,EAAMC,aAAanD,WADpD,OAUc,OATbA,EADD,SAE8DA,EAA7DI,cAFD,MAEU,GAFV,IAE8DJ,EAAhDgC,YAFd,MAEqB,GAFrB,IAE8DhC,EAArCiC,aAFzB,MAEiC,GAFjC,IAE8DjC,EAAzBiS,aAFrC,MAE6C,GAF7C,IAE8DjS,EAAbkC,YAFjD,MAEwD,EAFxD,EAGDuH,EAHC,sBAGoBwI,IACrB7R,EAAO+B,QAAUH,EAAKG,QAAUF,EAAME,QAAUD,KAClD9B,EAASA,EAAO8R,OAAOrI,cACvB7H,EAAiB,SAAVC,EAAA,WAAuBD,GAASA,EACvCyH,EAAG,UAAMA,EAAN,mBAAoBrJ,EAApB,iBAAmC4B,EAAnC,iBAAgDE,IAPhD,kBAUoBiQ,aAAK1J,GAAW,CAAEC,OAAQ,MAAOC,OAAQc,IAV7D,OAWH,OADMO,EAVH,iBAWGoI,aAAI,CACRrT,KAAMV,GAAYG,kBAClBU,QAAS8K,EAASpB,OAbjB,gCAgBH,OAhBG,oCAgBGwJ,aAAI,CACRrT,KAAMV,GAAYI,kBAClBS,QAAS,KAlBR,uDAuBQ,SAAU6S,KAAV,kEACb,OADa,SACPM,aAAI,CAACC,aAAWjU,GAAYE,UAAWO,MADhC,wC,iBCtBUiT,IAAV,SAAUA,KAAV,kEACb,OADa,SACPM,aAAI,CAACE,aAAKzT,MADH,wCCHf,IAAM0T,GAAe,CAAEjN,WAAW,GAUnBD,GATQ,WAAmC,IAAlCpC,EAAiC,uDAAzBsP,GAAcC,EAAW,uCACvD,OAAQA,EAAO1T,MACb,KAAKV,GAAYC,eACf,MAAO,CAAEiH,UAAWkN,EAAOvT,SAC7B,QACE,OAAOgE,I,ulBCNb,IAAMsP,GAAe,CACnB3K,MAAO,GACPC,oBAAoB,EACpBC,eAAgB,EAChB/H,QAAS,CACPI,OAAQ,GACR4B,KAAM,GACNC,MAAO,GACPgQ,MAAO,GACP/P,KAAM,IAsCKiB,GAlCM,WAAmC,IAAlCD,EAAiC,uDAAzBsP,GAAcC,EAAW,uCACrD,OAAQA,EAAO1T,MACb,KAAKV,GAAYE,UACf,OAAOwP,OAAO2E,OAAO,GAAIxP,EAAO,CAC9B4E,oBAAoB,IAExB,KAAKzJ,GAAYI,kBACf,OAAOsP,OAAO2E,OAAO,GAAIxP,EAAO,CAC9B4E,oBAAoB,IAExB,KAAKzJ,GAAYG,kBACf,OAAOuP,OAAO2E,OAAO,GAAIxP,EAAO,CAC9B2E,MAAM,GAAD,oBAAM3E,EAAM2E,OAAZ,aAAsB4K,EAAOvT,QAAQ,KAC1C6I,eAAgB0K,EAAOvT,QAAQ,GAC/B4I,oBAAoB,EACpB9H,QAAQ,MACHkD,EAAMlD,QADJ,CAELkC,KAAMgB,EAAMlD,QAAQkC,KAAOgB,EAAMlD,QAAQiS,UAG/C,KAAK5T,GAAYM,iBACf,OAAOoP,OAAO2E,OAAO,GAAIxP,EAAO,CAC9B2E,MAAO,KAEX,KAAKxJ,GAAYK,oBACf,OAAOqP,OAAO2E,OAAO,GAAIxP,EAAO,CAC9BlD,QAAQ,MAAMkD,EAAMlD,QAAb,GAAyByS,EAAOvT,WAG3C,QACE,OAAOgE,I,6kBC3Cb,IAAMsP,GAAe,CACnBnI,MAAO,GACPlK,eAAgB,GAChBqJ,MAAO,GACP2D,SAAU,IAqBG/J,GAlBK,WAAmC,IAAlCF,EAAiC,uDAAzBsP,GAAcC,EAAW,uCACpD,OAAQA,EAAO1T,MACb,KAAKV,GAAYO,UACf,OAAO,MACFsE,EADL,GAEKuP,EAAOvT,SAGd,KAAKb,GAAYQ,YAEf,OADAuK,aAAauJ,QACN,MACFH,IAEP,QACE,OAAOtP,ICXE0P,GANKC,aAAgB,CAClCvN,kBACAnC,gBACAC,iBCHI0P,GAAiBC,eACjBC,GAAQC,aAAYL,GAAaM,aAAgBJ,KACvDA,GAAeK,IAAIC,IAEJJ,UCEKK,QACW,cAA7BrE,OAAO9O,SAASoT,UAEe,UAA7BtE,OAAO9O,SAASoT,UAEhBtE,OAAO9O,SAASoT,SAASC,MACvB,2DCFNC,IAASC,OACP,kBAAC,IAAD,CAAUT,MAAOA,IACf,kBAAC,IAAD,CAAYU,SAAS,KACnB,kBAAC,GAAD,QAGJC,SAASC,eAAe,SD2GpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMhK,MAAK,SAAAiK,GACjCA,EAAaC,kB","file":"static/js/main.00fc36c9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.e7257fc5.png\";","module.exports = __webpack_public_path__ + \"static/media/defaultBg.c9b7e968.jpg\";","module.exports = __webpack_public_path__ + \"static/media/ChennaiSuperKingsLogo.fb4dc6c9.png\";","module.exports = __webpack_public_path__ + \"static/media/DeccanChargersLogo.fbfbc29f.png\";","module.exports = __webpack_public_path__ + \"static/media/DelhiDaredevilsLogo.93aa7498.png\";","module.exports = __webpack_public_path__ + \"static/media/GujaratLionsLogo.34b0964e.png\";","module.exports = __webpack_public_path__ + \"static/media/KingsPunjabLogo.72548a4a.png\";","module.exports = __webpack_public_path__ + \"static/media/KochiTuskersKeralaLogo.cebd62db.png\";","module.exports = __webpack_public_path__ + \"static/media/KolkataKnightRidersLogo.cf1db774.png\";","module.exports = __webpack_public_path__ + \"static/media/MumbaiIndiansLogo.354e03e0.png\";","module.exports = __webpack_public_path__ + \"static/media/PuneWarriorsIndiaLogo.0806d52b.png\";","module.exports = __webpack_public_path__ + \"static/media/RajasthanRoyalsLogo.11642aa0.png\";","module.exports = __webpack_public_path__ + \"static/media/RisingPuneSupergiantsLogo.73e950d6.png\";","module.exports = __webpack_public_path__ + \"static/media/RoyalChallengersBangalore.d39c7623.png\";","module.exports = __webpack_public_path__ + \"static/media/SunrisersHyderabad.abeff125.png\";","module.exports = __webpack_public_path__ + \"static/media/SunrisersHyderabadBg.0ba743b8.jpg\";","module.exports = __webpack_public_path__ + \"static/media/RoyalChallengersBangaloreBg.e6df48f9.jpg\";","module.exports = __webpack_public_path__ + \"static/media/MumbaiIndians.b99c6d04.jpg\";","module.exports = __webpack_public_path__ + \"static/media/RisingPuneSupergiants.f2919dd7.jpg\";","module.exports = __webpack_public_path__ + \"static/media/GujaratLions.c0164364.jpg\";","module.exports = __webpack_public_path__ + \"static/media/KolkataKnightRiders.3e462feb.jpg\";","module.exports = __webpack_public_path__ + \"static/media/DelhiDaredevils.74fc3dfd.jpg\";","module.exports = __webpack_public_path__ + \"static/media/ChennaiSuperKings.7c0ce41f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/RajasthanRoyals.8581561f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/DeccanChargers.9fb08efc.jpg\";","module.exports = __webpack_public_path__ + \"static/media/KochiTuskersKerala.774dcb22.jpg\";","module.exports = __webpack_public_path__ + \"static/media/PuneWarriorsIndia.fe7ec4b4.jpg\";","module.exports = __webpack_public_path__ + \"static/media/KingsPunjab.75ce27d4.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"theme\":\"#fec132\",\"themeBg\":\"#f7f7f7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"theme\":\"#fec132\",\"themeBg\":\"#f7f7f7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"theme\":\"#fec132\",\"themeBg\":\"#f7f7f7\"};","import logo from \"assets/img/logo.png\";\nimport defaultBg from \"assets/img/defaultBg.jpg\";\nimport ChennaiSuperKingsLogo from \"assets/img/ChennaiSuperKingsLogo.png\";\nimport DeccanChargersLogo from \"assets/img/DeccanChargersLogo.png\";\nimport DelhiDaredevilsLogo from \"assets/img/DelhiDaredevilsLogo.png\";\nimport GujaratLionsLogo from \"assets/img/GujaratLionsLogo.png\";\nimport KingsPunjabLogo from \"assets/img/KingsPunjabLogo.png\";\nimport KochiTuskersKeralaLogo from \"assets/img/KochiTuskersKeralaLogo.png\";\nimport KolkataKnightRidersLogo from \"assets/img/KolkataKnightRidersLogo.png\";\nimport MumbaiIndiansLogo from \"assets/img/MumbaiIndiansLogo.png\";\nimport PuneWarriorsIndiaLogo from \"assets/img/PuneWarriorsIndiaLogo.png\";\nimport RajasthanRoyalsLogo from \"assets/img/RajasthanRoyalsLogo.png\";\nimport RisingPuneSupergiantsLogo from \"assets/img/RisingPuneSupergiantsLogo.png\";\nimport RoyalChallengersBangalore from \"assets/img/RoyalChallengersBangalore.png\";\nimport SunrisersHyderabad from \"assets/img/SunrisersHyderabad.png\";\nimport SunrisersHyderabadBg from \"assets/img/SunrisersHyderabadBg.jpg\";\nimport RoyalChallengersBangaloreBg from \"assets/img/RoyalChallengersBangaloreBg.jpg\";\nimport MumbaiIndians from \"assets/img/MumbaiIndians.jpg\";\nimport RisingPuneSupergiants from \"assets/img/RisingPuneSupergiants.jpg\";\nimport GujaratLions from \"assets/img/GujaratLions.jpg\";\nimport KolkataKnightRiders from \"assets/img/KolkataKnightRiders.jpg\";\nimport DelhiDaredevils from \"assets/img/DelhiDaredevils.jpg\";\nimport ChennaiSuperKings from \"assets/img/ChennaiSuperKings.jpg\";\nimport RajasthanRoyals from \"assets/img/RajasthanRoyals.jpg\";\nimport DeccanChargers from \"assets/img/DeccanChargers.jpg\";\nimport KochiTuskersKerala from \"assets/img/KochiTuskersKerala.jpg\";\nimport PuneWarriorsIndia from \"assets/img/PuneWarriorsIndia.jpg\";\nimport KingsPunjab from \"assets/img/KingsPunjab.jpg\";\n\nconst images = {\n  logo,\n  defaultBg,\n  ChennaiSuperKingsLogo,\n  DeccanChargersLogo,\n  DelhiDaredevilsLogo,\n  GujaratLionsLogo,\n  KingsPunjabLogo,\n  KochiTuskersKeralaLogo,\n  KolkataKnightRidersLogo,\n  MumbaiIndiansLogo,\n  PuneWarriorsIndiaLogo,\n  RajasthanRoyalsLogo,\n  RisingPuneSupergiantsLogo,\n  RoyalChallengersBangalore,\n  SunrisersHyderabad,\n  SunrisersHyderabadBg,\n  RoyalChallengersBangaloreBg,\n  MumbaiIndians,\n  RisingPuneSupergiants,\n  GujaratLions,\n  KolkataKnightRiders,\n  DelhiDaredevils,\n  ChennaiSuperKings,\n  RajasthanRoyals,\n  DeccanChargers,\n  KochiTuskersKerala,\n  PuneWarriorsIndia,\n  KingsPunjab\n};\nexport default function(imageName) {\n  return images[imageName];\n}\n","const ActionTypes = {\n  UPDATE_LOADING: \"UPDATE_LOADING\",\n  GET_ITEMS: \"GET_ITEMS\",\n  GET_ITEMS_SUCCESS: \"GET_ITEMS_SUCCESS\",\n  GET_ITEMS_FAILURE: \"GET_ITEMS_FAILURE\",\n  ITEMS_FILTER_CHANGE: \"ITEMS_FILTER_CHANGE\",\n  CLEAR_ITEMS_LIST: \"CLEAR_ITEMS_LIST\",\n  SAVE_USER: \"SAVE_USER\",\n  USER_LOGOUT: \"USER_LOGOUT\"\n};\n\nexport default ActionTypes;\n","import ActionTypes from \"../constants/ActionTypes\";\n\nexport const getItems = () => {\n  return {\n    type: ActionTypes.GET_ITEMS\n  };\n};\n\nexport const clearItems = () => {\n  return {\n    type: ActionTypes.CLEAR_ITEMS_LIST\n  };\n};\n\nexport const itemsFilterChange = payload => ({\n  type: ActionTypes.ITEMS_FILTER_CHANGE,\n  payload\n});\n","import ActionTypes from \"../constants/ActionTypes\";\n\nexport const logout = () => ({\n  type: ActionTypes.USER_LOGOUT\n});\n\nexport const saveUser = payload => ({\n  type: ActionTypes.SAVE_USER,\n  payload\n});\n","export const routeMainStack = [\"/item-detail\", \"/profile\", \"/predict-result\"];\n\nexport const months = [\n  {\n    abbreviation: \"Jan\",\n    name: \"January\"\n  },\n  {\n    abbreviation: \"Feb\",\n    name: \"February\"\n  },\n  {\n    abbreviation: \"Mar\",\n    name: \"March\"\n  },\n  {\n    abbreviation: \"Apr\",\n    name: \"April\"\n  },\n  {\n    abbreviation: \"May\",\n    name: \"May\"\n  },\n  {\n    abbreviation: \"Jun\",\n    name: \"June\"\n  },\n  {\n    abbreviation: \"Jul\",\n    name: \"July\"\n  },\n  {\n    abbreviation: \"Aug\",\n    name: \"August\"\n  },\n  {\n    abbreviation: \"Sep\",\n    name: \"September\"\n  },\n  {\n    abbreviation: \"Oct\",\n    name: \"October\"\n  },\n  {\n    abbreviation: \"Nov\",\n    name: \"November\"\n  },\n  {\n    abbreviation: \"Dec\",\n    name: \"December\"\n  }\n];\n\nexport const allTeams = {\n  \"Sunrisers Hyderabad\": {\n    icon: \"SunrisersHyderabad\",\n    bg: \"SunrisersHyderabadBg\",\n    color: \"#FF822A\"\n  },\n  \"Royal Challengers Bangalore\": {\n    icon: \"RoyalChallengersBangalore\",\n    bg: \"RoyalChallengersBangaloreBg\",\n    color: \"#EC1C24\"\n  },\n  \"Mumbai Indians\": {\n    icon: \"MumbaiIndiansLogo\",\n    bg: \"MumbaiIndians\",\n    color: \"#004BA0\"\n  },\n  \"Rising Pune Supergiant\": {\n    icon: \"RisingPuneSupergiantsLogo\",\n    bg: \"RisingPuneSupergiants\",\n    color: \"#2C04A2\"\n  },\n  \"Gujarat Lions\": {\n    icon: \"GujaratLionsLogo\",\n    bg: \"GujaratLions\",\n    color: \"#E04F16\"\n  },\n  \"Kolkata Knight Riders\": {\n    icon: \"KolkataKnightRidersLogo\",\n    bg: \"KolkataKnightRiders\",\n    color: \"#2E0854\"\n  },\n  \"Kings XI Punjab\": {\n    icon: \"KingsPunjabLogo\",\n    bg: \"KingsPunjab\",\n    color: \"#b7b7b8\"\n    // color: \"#DCDDDF\"\n  },\n  \"Delhi Daredevils\": {\n    icon: \"DelhiDaredevilsLogo\",\n    bg: \"DelhiDaredevils\",\n    color: \"#00008B\"\n  },\n  \"Chennai Super Kings\": {\n    icon: \"ChennaiSuperKingsLogo\",\n    bg: \"ChennaiSuperKings\",\n    color: \"#FFFF3C\"\n  },\n  \"Rajasthan Royals\": {\n    icon: \"RajasthanRoyalsLogo\",\n    bg: \"RajasthanRoyals\",\n    color: \"#CBA92B\"\n  },\n  \"Deccan Chargers\": {\n    icon: \"DeccanChargersLogo\",\n    bg: \"DeccanChargers\",\n    color: \"#366293\"\n  },\n  \"Kochi Tuskers Kerala\": {\n    icon: \"KochiTuskersKeralaLogo\",\n    bg: \"KochiTuskersKerala\",\n    color: \"#632B72\"\n  },\n  \"Pune Warriors\": {\n    icon: \"PuneWarriorsIndiaLogo\",\n    bg: \"PuneWarriorsIndia\",\n    color: \"#40E0D0\"\n  }\n};\n\nexport const allVenue = [\n  \"Rajiv Gandhi International Stadium, Uppal\",\n  \"Maharashtra Cricket Association Stadium\",\n  \"Saurashtra Cricket Association Stadium\",\n  \"Holkar Cricket Stadium\",\n  \"M Chinnaswamy Stadium\",\n  \"Wankhede Stadium\",\n  \"Eden Gardens\",\n  \"Feroz Shah Kotla\",\n  \"Punjab Cricket Association IS Bindra Stadium, Mohali\",\n  \"Green Park\",\n  \"Punjab Cricket Association Stadium, Mohali\",\n  \"Sawai Mansingh Stadium\",\n  \"MA Chidambaram Stadium, Chepauk\",\n  \"Dr DY Patil Sports Academy\",\n  \"Newlands\",\n  \"St George's Park\",\n  \"Kingsmead\",\n  \"SuperSport Park\",\n  \"Buffalo Park\",\n  \"New Wanderers Stadium\",\n  \"De Beers Diamond Oval\",\n  \"OUTsurance Oval\",\n  \"Brabourne Stadium\",\n  \"Sardar Patel Stadium, Motera\",\n  \"Barabati Stadium\",\n  \"Vidarbha Cricket Association Stadium, Jamtha\",\n  \"Himachal Pradesh Cricket Association Stadium\",\n  \"Nehru Stadium\",\n  \"Dr. Y.S. Rajasekhara Reddy ACA-VDCA Cricket Stadium\",\n  \"Subrata Roy Sahara Stadium\",\n  \"Shaheed Veer Narayan Singh International Stadium\",\n  \"JSCA International Stadium Complex\",\n  \"Sheikh Zayed Stadium\",\n  \"Sharjah Cricket Stadium\",\n  \"Dubai International Cricket Stadium\",\n  \"M. A. Chidambaram Stadium\",\n  \"Feroz Shah Kotla Ground\",\n  \"M. Chinnaswamy Stadium\",\n  \"Rajiv Gandhi Intl. Cricket Stadium\",\n  \"IS Bindra Stadium\",\n  \"ACA-VDCA Stadium\"\n];\n","import React, { useRef, useCallback } from \"react\";\nimport { FaSearch, FaUserCircle } from \"react-icons/fa\";\nimport { IoMdClose } from \"react-icons/io\";\nimport debounce from \"lodash/debounce\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport {\n  UncontrolledDropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem\n} from \"reactstrap\";\n\nimport getImage from \"utils/images\";\nimport { getItems, itemsFilterChange, clearItems } from \"redux/actions/getItem\";\nimport { logout } from \"redux/actions/user\";\nimport { allTeams } from \"utils/common\";\n// @ts-ignore\nimport colors from \"assets/css/colors.scss\";\n\nconst { theme } = colors;\n\nconst Header = props => {\n  const {\n    dispatch,\n    filters,\n    location: { pathname },\n    favourite_team\n  } = props;\n\n  const { search = \"\" } = filters;\n  const myInp = useRef(null);\n  function loadData(searchValue) {\n    dispatch(clearItems());\n    dispatch(getItems());\n  }\n  const delayedQuery = useCallback(debounce(loadData, 300), []);\n\n  const onSearch = event => {\n    const {\n      target: { value }\n    } = event;\n    dispatch(\n      itemsFilterChange({ search: value, sort: \"\", order: \"\", skip: 0 })\n    );\n\n    if (value.length > 2) {\n      delayedQuery(value);\n    }\n  };\n  const clearSearch = () => {\n    dispatch(itemsFilterChange({ search: \"\", sort: \"\", order: \"\", skip: 0 }));\n    loadData(\"\");\n  };\n\n  if ([\"/login\", \"/signup\"].includes(pathname)) {\n    return null;\n  }\n\n  const logoutFunction = () => {\n    dispatch(logout());\n    props.history.push(\"/login\");\n  };\n  const moveToHome = () => {\n    props.history.push(\"/home\");\n  };\n  const moveToProfile = () => {\n    dispatch(itemsFilterChange({ sort: \"\", order: \"\", search: \"\" }));\n    props.history.push(\"/profile\");\n  };\n\n  return (\n    <div\n      className=\"Header center\"\n      style={{\n        backgroundColor: favourite_team ? allTeams[favourite_team].color : theme\n      }}\n    >\n      <img\n        src={getImage(\"logo\")}\n        alt=\"logo\"\n        style={{ maxWidth: \"20%\", maxHeight: 35, opacity: 0.8 }}\n        onClick={moveToHome}\n      />\n      <div className=\"search-wrapper center\">\n        {pathname === \"/home\" ? (\n          <div\n            className=\"search center\"\n            onClick={() => {\n              myInp.current.focus();\n            }}\n          >\n            <FaSearch className=\"Header_icon search_icon\" />\n            <input\n              className=\"search_input\"\n              placeholder=\"Search by team name\"\n              onChange={onSearch}\n              value={search}\n              ref={myInp}\n            />\n            {search.length ? (\n              <IoMdClose size={25} onClick={clearSearch} />\n            ) : null}\n          </div>\n        ) : (\n          void 0\n        )}\n      </div>\n      <div style={{ minWidth: 85 }}>\n        <UncontrolledDropdown>\n          <DropdownToggle tag=\"a\" className=\"nav-link dropdown-link\" caret>\n            <FaUserCircle className=\"Header_icon\" size={36} />\n          </DropdownToggle>\n          <DropdownMenu right>\n            <DropdownItem onClick={moveToProfile}>Profile</DropdownItem>\n            <DropdownItem divider />\n            <DropdownItem onClick={logoutFunction}>Log out</DropdownItem>\n          </DropdownMenu>\n        </UncontrolledDropdown>\n      </div>\n    </div>\n  );\n};\nconst mapStateToProps = state => {\n  return {\n    filters: state.itemsReducer.filters,\n    favourite_team: state.userReducer.favourite_team\n  };\n};\n\nconst HeaderWithRouter = withRouter(props => <Header {...props} />);\nexport default connect(mapStateToProps)(HeaderWithRouter);\n","import React from \"react\";\n\nexport const LoadingSpinner = props => {\n  const {\n    width = 150,\n    height = 150,\n    colorFirst = \"#1d3f72\",\n    colorSecond = \"#5699d2\",\n    strokeWidth = 4,\n    radiusFirst = 40,\n    radiusSecond = 35\n  } = props;\n  return (\n    <svg\n      width={width}\n      height={height}\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 100 100\"\n      preserveAspectRatio=\"xMidYMid\"\n      className=\"lds-double-ring\"\n    >\n      <circle\n        cx={50}\n        cy={50}\n        ng-attr-r=\"{{config.radius}}\"\n        ng-attr-stroke-width=\"{{config.width}}\"\n        ng-attr-stroke=\"{{config.c1}}\"\n        ng-attr-stroke-dasharray=\"{{config.dasharray}}\"\n        fill=\"none\"\n        strokeLinecap=\"round\"\n        r={radiusFirst}\n        strokeWidth={strokeWidth}\n        stroke={colorFirst}\n        strokeDasharray=\"62.83185307179586 62.83185307179586\"\n        transform=\"rotate(199.69 50 50)\"\n      >\n        <animateTransform\n          attributeName=\"transform\"\n          type=\"rotate\"\n          calcMode=\"linear\"\n          values=\"0 50 50;360 50 50\"\n          keyTimes=\"0;1\"\n          dur=\"0.9s\"\n          begin=\"0s\"\n          repeatCount=\"indefinite\"\n        />\n      </circle>\n      <circle\n        cx={50}\n        cy={50}\n        ng-attr-r=\"{{config.radius2}}\"\n        ng-attr-stroke-width=\"{{config.width}}\"\n        ng-attr-stroke=\"{{config.c2}}\"\n        ng-attr-stroke-dasharray=\"{{config.dasharray2}}\"\n        ng-attr-stroke-dashoffset=\"{{config.dashoffset2}}\"\n        fill=\"none\"\n        strokeLinecap=\"round\"\n        r={radiusSecond}\n        strokeWidth={strokeWidth}\n        stroke={colorSecond}\n        strokeDasharray=\"54.97787143782138 54.97787143782138\"\n        strokeDashoffset=\"54.97787143782138\"\n        transform=\"rotate(-199.69 50 50)\"\n      >\n        <animateTransform\n          attributeName=\"transform\"\n          type=\"rotate\"\n          calcMode=\"linear\"\n          values=\"0 50 50;-360 50 50\"\n          keyTimes=\"0;1\"\n          dur=\"0.9s\"\n          begin=\"0s\"\n          repeatCount=\"indefinite\"\n        />\n      </circle>\n    </svg>\n  );\n};\n\nexport default LoadingSpinner;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport Header from \"./Header\";\nimport LoadingSpinner from \"components/LoadingSpinner\";\nimport getImage from \"utils/images\";\nimport { allTeams } from \"utils/common\";\n// @ts-ignore\nimport colors from \"assets/css/colors.scss\";\n\nconst { theme } = colors;\n\nconst Layout = props => {\n  const { loading, favourite_team } = props;\n  return (\n    <React.Fragment>\n      <div\n        className=\"fixed-body\"\n        style={{\n          backgroundColor: favourite_team\n            ? allTeams[favourite_team].color\n            : theme,\n          opacity: 0.8,\n          backgroundImage: `url(${getImage(\n            favourite_team ? allTeams[favourite_team].bg : \"defaultBg\"\n          )})`,\n          backgroundPosition: \"top\",\n          backgroundSize: \"cover\"\n        }}\n      ></div>\n      {loading && (\n        <div className=\"loading\">\n          <LoadingSpinner />\n        </div>\n      )}\n      <Header />\n      <div className=\"main-app\">{props.children}</div>\n    </React.Fragment>\n  );\n};\n\nconst mapStateToProps = state => {\n  return {\n    loading: state.loadingReducer.loadState,\n    favourite_team: state.userReducer.favourite_team\n  };\n};\nexport default connect(mapStateToProps)(Layout);\n","import React from \"react\";\nimport { FaFilter } from \"react-icons/fa\";\nimport {\n  UncontrolledDropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n  Button\n} from \"reactstrap\";\nimport { connect } from \"react-redux\";\n\nimport { getItems, itemsFilterChange, clearItems } from \"redux/actions/getItem\";\nimport { allTeams } from \"utils/common\";\n// @ts-ignore\nimport colors from \"assets/css/colors.scss\";\n\nconst { theme } = colors;\n\nfunction FilterBar(props) {\n  const { filters, dispatch, favourite_team } = props;\n  const onSortChange = order => {\n    dispatch(itemsFilterChange({ sort: \"season\", order, skip: 0 }));\n    dispatch(clearItems());\n    dispatch(getItems());\n  };\n  const onClickPredict = () => {\n    props.history.push(\"/predict-result\");\n    dispatch(itemsFilterChange({ sort: \"\", order: \"\", search: \"\" }));\n  };\n  return (\n    <div\n      className=\"Home_filterBar center\"\n      style={{\n        backgroundColor: favourite_team ? allTeams[favourite_team].color : theme\n      }}\n    >\n      <h5 className=\"title\">MATCHES</h5>\n      <Button color=\"success\" className=\"predict-btn\" onClick={onClickPredict}>\n        Predict Result\n      </Button>\n      <UncontrolledDropdown>\n        <DropdownToggle tag=\"a\" className=\"nav-link\">\n          <div className=\"sort btn center\">\n            <div className=\"description\">Sort</div>\n            <FaFilter size={20} />\n          </div>\n        </DropdownToggle>\n        <DropdownMenu>\n          <DropdownItem\n            active={filters.order === \"asc\" ? true : false}\n            onClick={onSortChange.bind(this, \"asc\")}\n            style={{\n              backgroundColor:\n                filters.order === \"asc\"\n                  ? favourite_team\n                    ? allTeams[favourite_team].color\n                    : theme\n                  : \"none\"\n            }}\n          >\n            Season by ascending\n          </DropdownItem>\n          <DropdownItem\n            active={filters.order === \"desc\" ? true : false}\n            onClick={onSortChange.bind(this, \"desc\")}\n            style={{\n              backgroundColor:\n                filters.order === \"desc\"\n                  ? favourite_team\n                    ? allTeams[favourite_team].color\n                    : theme\n                  : \"none\"\n            }}\n          >\n            Season by descending\n          </DropdownItem>\n        </DropdownMenu>\n      </UncontrolledDropdown>\n    </div>\n  );\n}\nconst mapStateToProps = state => {\n  return {\n    filters: state.itemsReducer.filters,\n    favourite_team: state.userReducer.favourite_team\n  };\n};\nexport default connect(mapStateToProps)(FilterBar);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\n\nimport getImages from \"utils/images\";\nimport { allTeams } from \"utils/common\";\n// @ts-ignore\nimport colors from \"assets/css/colors.scss\";\n\nconst { theme } = colors;\n\nfunction MatchCard(props) {\n  const { item, favourite_team, key, style, history } = props;\n  const { date, team1, team2, venue, city, season = \"\" } = item;\n  const onClick = () => {\n    history.push(\"/item-detail\", { item });\n  };\n  return (\n    <div key={key} style={style}>\n      <h6 className=\"marginPadding\">{date ? date : season}</h6>\n      <div\n        className=\"MatchCard\"\n        onClick={onClick}\n        style={{\n          borderTopColor: favourite_team\n            ? allTeams[favourite_team].color\n            : theme\n        }}\n      >\n        <div className=\"left-image-view MatchCard_imageView\">\n          <img\n            src={getImages(allTeams[team1].icon)}\n            className=\"teamImage\"\n            alt=\"\"\n          />\n        </div>\n\n        <div className=\"MatchCard_detail\">\n          <div className=\"team-name\">{team1}</div>\n          <h6 className=\"marginPadding\">VS</h6>\n          <div className=\"team-name\">{team2}</div>\n          <div className=\"venue\">{`${venue}, ${city}`}</div>\n        </div>\n        <div className=\"right-image-view MatchCard_imageView\">\n          <img\n            src={getImages(allTeams[team2].icon)}\n            className=\"teamImage\"\n            alt=\"\"\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nconst mapStateToProps = state => {\n  return {\n    favourite_team: state.userReducer.favourite_team\n  };\n};\nconst MatchCardWithRouter = withRouter(props => <MatchCard {...props} />);\nexport default connect(mapStateToProps)(MatchCardWithRouter);\n","import React from \"react\";\nimport { AutoSizer, WindowScroller, List } from \"react-virtualized\";\n\nimport MatchCard from \"./MatchCard\";\n\nconst MatchesList = props => {\n  const { matches } = props;\n  return (\n    <div className=\"MatchesList\">\n      <div className=\"app-container\">\n        <WindowScroller>\n          {({\n            height,\n            isScrolling,\n            registerChild,\n            onChildScroll,\n            scrollTop\n          }) => (\n            <div className=\"WindowScroller\">\n              <AutoSizer disableHeight>\n                {({ width }) => (\n                  <div ref={registerChild}>\n                    <List\n                      autoHeight\n                      height={height}\n                      width={width}\n                      scrollTop={scrollTop}\n                      isScrolling={isScrolling}\n                      onScroll={onChildScroll}\n                      overscanRowCount={4}\n                      rowCount={matches.length}\n                      rowHeight={180}\n                      rowRenderer={({\n                        index,\n                        isScrolling,\n                        isVisible,\n                        key,\n                        style\n                      }) => {\n                        return (\n                          <MatchCard\n                            item={matches[index]}\n                            {...{\n                              index,\n                              isScrolling,\n                              isVisible,\n                              key,\n                              style\n                            }}\n                          />\n                        );\n                      }}\n                    />\n                  </div>\n                )}\n              </AutoSizer>\n            </div>\n          )}\n        </WindowScroller>\n      </div>\n    </div>\n  );\n};\n\nexport default MatchesList;\n","import React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport InfiniteScroll from \"react-infinite-scroller\";\nimport { FaSearchMinus } from \"react-icons/fa\";\n\nimport { getItems } from \"redux/actions/getItem\";\nimport FilterBar from \"components/FilterBar\";\nimport MatchesList from \"components/MatchesList\";\n\nconst Home = props => {\n  const {\n    dispatch,\n    items,\n    history,\n    itemsApiInProgress,\n    filters,\n    totalItemCount\n  } = props;\n  let { skip } = filters;\n  useEffect(() => {\n    dispatch(getItems());\n    // eslint-disable-next-line\n  }, []);\n\n  const loadMore = () => {\n    !itemsApiInProgress && dispatch(getItems());\n  };\n\n  return (\n    <div className=\"Home\">\n      {items.length ? (\n        <>\n          <FilterBar history={history} />\n          <div className=\"center Home_body_container\">\n            <InfiniteScroll\n              pageStart={0}\n              loadMore={loadMore}\n              style={{ width: \"100%\" }}\n              hasMore={skip < totalItemCount ? true : false}\n              loader={\n                <div className=\"loader\" key={0}>\n                  Loading ...\n                </div>\n              }\n            >\n              <MatchesList matches={items} />\n            </InfiniteScroll>\n          </div>\n        </>\n      ) : (\n        <div className=\"Home_noResult\">\n          <FaSearchMinus size={60} />\n          <h4 className=\"title\">No result found</h4>\n        </div>\n      )}\n    </div>\n  );\n};\nconst mapStateToProps = state => {\n  return {\n    loading: state.loadingReducer.loadState,\n    items: state.itemsReducer.items,\n    itemsApiInProgress: state.itemsReducer.itemsApiInProgress,\n    totalItemCount: state.itemsReducer.totalItemCount,\n    filters: state.itemsReducer.filters\n  };\n};\nexport default connect(mapStateToProps)(Home);\n","export const isValidPassword = value => {\n  if (value) {\n    if (\n      // eslint-disable-next-line\n      /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#\\$%\\^&\\*])(?=.{6,})/.test(\n        value\n      )\n    ) {\n      return false;\n    } else {\n      return \"Password is not strong\";\n    }\n  }\n  return \"Password is required\";\n};\n\nexport const isValidEmail = value => {\n  if (value && /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value)) {\n    return false;\n  }\n  return \"Invalid email address\";\n};\nexport const isEmptyString = value => {\n  if (value && value.length) {\n    return false;\n  }\n  return \"Feild is required\";\n};\n","import axios from \"axios\";\n\nconst apiBaseUrl = process.env.REACT_APP_SERVER_URL || \"https://ipl-server.herokuapp.com\";\n\nconst APICaller = ({\n  method = \"get\",\n  reqUrl,\n  data = {},\n  headers = {\n    \"content-type\": \"application/json\",\n    Accept: \"application/json\"\n  }\n}) => {\n  return new Promise(async (resolve, reject) => {\n    const user = localStorage.getItem(\"user\");\n    let { token = false } = user ? JSON.parse(user) : {};\n\n    let url = `${apiBaseUrl}/api/${reqUrl}`;\n    headers = token ? { ...headers, Authorization: token } : headers;\n    // console.log(url, \"data\", data, \"method\", method, \"header\", headers);\n    let options = {\n      method,\n      url,\n      data,\n      headers\n    };\n    if (method.toLowerCase() === \"get\") delete options[\"data\"];\n    axios({ ...options })\n      .then(response => {\n        // console.log(\"%c{res}\", \"color: green\", \" => \", response); // eslint-disable-line no-console\n        resolve(response);\n      })\n      .catch(error => {\n        reject(error);\n      });\n  });\n};\nexport default APICaller;\n","import ActionTypes from \"../constants/ActionTypes\";\n\nexport const updateLoadingAction = loading => ({\n  type: ActionTypes.UPDATE_LOADING,\n  payload: loading\n});\n","import React, { useState, useEffect } from \"react\";\nimport {\n  Button,\n  Modal,\n  ModalBody,\n  ModalFooter,\n  Form,\n  FormGroup,\n  Label,\n  Input,\n  FormFeedback,\n  Alert\n} from \"reactstrap\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\n\nimport { isValidEmail, isEmptyString } from \"utils/validators\";\nimport APICaller from \"utils/APICaller\";\nimport { updateLoadingAction } from \"redux/actions/loading\";\nimport { saveUser } from \"redux/actions/user\";\n\nfunction Login(props) {\n  const [email, setEmail] = useState(\"\");\n  const [validationEmailMsg, setValidationEmailMsg] = useState(false);\n  const [password, setPassword] = useState(\"\");\n  const [validationPasswordMsg, setValidationPasswordMsg] = useState(false);\n  const [validationMsg, setValidationMsg] = useState(\"\");\n  const [isModalOpen, setIsModalOpen] = useState(true);\n  useEffect(() => {\n    return () => {\n      closeModal();\n    };\n  }, []);\n\n  const handleSubmit = ev => {\n    ev.preventDefault();\n    const isValid = validateForm();\n\n    if (isValid) {\n      const formData = {\n        email,\n        password\n      };\n      // this.props.onSubmit(formData);\n      props.dispatch(updateLoadingAction(true));\n      APICaller({\n        method: \"POST\",\n        reqUrl: \"users/login\",\n        data: formData\n      })\n        .then(res => {\n          delete res.data._id;\n          localStorage.setItem(\"user\", JSON.stringify(res.data));\n          props.dispatch(saveUser(res.data));\n          props.dispatch(updateLoadingAction(false));\n\n          props.history.push(\"/home\");\n        })\n        .catch(err => {\n          props.dispatch(updateLoadingAction(false));\n          if (err.response.data === \"Unauthorized\") {\n            setValidationMsg(\"Oops! Wrong email or password.\");\n          } else {\n            setValidationMsg(\"Oops! something went wrong\");\n          }\n        });\n    }\n  };\n\n  const validateForm = touchedElem => {\n    let hasInvalidEmail = \"\",\n      hasInvalidPassword = \"\";\n    if (!touchedElem) {\n      hasInvalidEmail = isValidEmail(email);\n      hasInvalidPassword = isEmptyString(password);\n      setValidationEmailMsg(hasInvalidEmail);\n      setValidationPasswordMsg(hasInvalidPassword);\n    } else {\n      setValidationEmailMsg(false);\n      setValidationPasswordMsg(false);\n    }\n    if (!email || !password || hasInvalidEmail || hasInvalidPassword) {\n      return false;\n    }\n    return true;\n  };\n\n  const handleInputChange = ev => {\n    if (ev.target.name === \"email\") {\n      setEmail(ev.target.value);\n    } else {\n      setPassword(ev.target.value);\n    }\n    validateForm(ev.target.name);\n  };\n  const closeModal = () => {\n    setIsModalOpen(false);\n  };\n  return (\n    <Modal\n      isOpen={isModalOpen}\n      toggle={() => {}}\n      className=\"Login\"\n      centered\n      backdrop={false}\n    >\n      <ModalBody className=\"Login_body\">\n        <h2 className=\"title\">ACCOUNT LOGIN</h2>\n        <Form onSubmit={handleSubmit}>\n          <FormGroup>\n            <Label for=\"email\">Email</Label>\n            <Input\n              invalid={validationEmailMsg ? true : false}\n              type=\"email\"\n              onChange={handleInputChange}\n              name=\"email\"\n              value={email}\n              placeholder=\"Enter email\"\n            />\n            <FormFeedback>\n              {validationEmailMsg ? validationEmailMsg : \"\"}\n            </FormFeedback>\n          </FormGroup>\n          <FormGroup>\n            <Label for=\"password\">Pasword</Label>\n            <Input\n              invalid={validationPasswordMsg ? true : false}\n              type=\"password\"\n              onChange={handleInputChange}\n              name=\"password\"\n              maxLength={100}\n              value={password}\n              placeholder=\"Enter password\"\n            />\n            <FormFeedback>\n              {validationPasswordMsg ? validationPasswordMsg : \"\"}\n            </FormFeedback>\n          </FormGroup>\n          <Alert color=\"danger\" isOpen={validationMsg ? true : false}>\n            {validationMsg}\n          </Alert>\n          <Button color=\"secondary\" type=\"submit\" className=\"Login_btn\">\n            Login\n          </Button>\n        </Form>\n      </ModalBody>\n      <ModalFooter className=\"Login_footer\">\n        Don't have an account yet ?\n        <Link to=\"/signup\" style={{ padding: \"5px 10px\" }}>\n          Sign up\n        </Link>\n      </ModalFooter>\n    </Modal>\n  );\n}\n\nexport default connect()(Login);\n","import React, { useState, useEffect } from \"react\";\nimport {\n  Button,\n  Modal,\n  ModalBody,\n  ModalFooter,\n  Form,\n  FormGroup,\n  Label,\n  Input,\n  FormFeedback,\n  Alert\n} from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nimport { isValidEmail, isValidPassword, isEmptyString } from \"utils/validators\";\nimport APICaller from \"utils/APICaller\";\nimport { allTeams } from \"utils/common\";\nimport { updateLoadingAction } from \"redux/actions/loading\";\n\nfunction SignUp(props) {\n  const [username, setUsername] = useState(\"\");\n  const [validationUsernameMsg, setValidationUsernameMsg] = useState(false);\n  const [favourite, setFavourite] = useState(\"Sunrisers Hyderabad\");\n  const [email, setEmail] = useState(\"\");\n  const [validationEmailMsg, setValidationEmailMsg] = useState(false);\n  const [password, setPassword] = useState(\"\");\n  const [validationPasswordMsg, setValidationPasswordMsg] = useState(false);\n  const [validationMsg, setValidationMsg] = useState(\"\");\n  const [isModalOpen, setIsModalOpen] = useState(true);\n  useEffect(() => {\n    return () => {\n      closeModal();\n    };\n  }, []);\n\n  const handleSubmit = ev => {\n    ev.preventDefault();\n    const isValid = validateForm();\n\n    if (isValid) {\n      const formData = {\n        email,\n        password,\n        username,\n        favourite_team: favourite\n      };\n      // this.props.onSubmit(formData);\n      props.dispatch(updateLoadingAction(true));\n      APICaller({\n        method: \"POST\",\n        reqUrl: \"users/signup\",\n        data: formData\n      })\n        .then(res => {\n          props.dispatch(updateLoadingAction(false));\n          props.history.push(\"/login\");\n        })\n        .catch(err => {\n          props.dispatch(updateLoadingAction(false));\n          const {\n            data: {\n              errors: { email = \"\", username = \"\" }\n            }\n          } = err.response;\n          if (email) {\n            setValidationEmailMsg(\"Email already registered\");\n          }\n          if (username) {\n            setValidationUsernameMsg(username);\n          } else {\n            setValidationMsg(\"Oops! something went wrong\");\n          }\n        });\n    }\n  };\n\n  const validateForm = touchedElem => {\n    let hasInValidEmail = \"\",\n      hasInValidPassword = \"\",\n      hasInValidUsername = \"\";\n    if (!touchedElem) {\n      hasInValidEmail = isValidEmail(email);\n      hasInValidPassword = isValidPassword(password);\n      hasInValidUsername = isEmptyString(username);\n      setValidationEmailMsg(hasInValidEmail);\n      setValidationPasswordMsg(hasInValidPassword);\n      setValidationUsernameMsg(hasInValidUsername);\n    } else {\n      setValidationEmailMsg(false);\n      setValidationPasswordMsg(false);\n      setValidationUsernameMsg(false);\n    }\n    if (\n      !email ||\n      !password ||\n      hasInValidEmail ||\n      hasInValidPassword ||\n      hasInValidUsername\n    ) {\n      return false;\n    }\n    return true;\n  };\n\n  const handleInputChange = ev => {\n    if (ev.target.name === \"email\") {\n      setEmail(ev.target.value);\n    } else if (ev.target.name === \"username\") {\n      setUsername(ev.target.value);\n    } else {\n      setPassword(ev.target.value);\n    }\n    validateForm(ev.target.name);\n  };\n\n  const closeModal = () => {\n    setIsModalOpen(false);\n  };\n  return (\n    <Modal\n      isOpen={isModalOpen}\n      toggle={() => {}}\n      className=\"Login\"\n      centered\n      backdrop={false}\n    >\n      <ModalBody className=\"Login_body\">\n        <h2 className=\"title\">ACCOUNT SIGN UP</h2>\n        <Form onSubmit={handleSubmit}>\n          <FormGroup>\n            <Label for=\"email\">User name</Label>\n            <Input\n              invalid={validationUsernameMsg ? true : false}\n              type=\"text\"\n              onChange={handleInputChange}\n              name=\"username\"\n              maxLength={20}\n              minLength={3}\n              value={username}\n              placeholder=\"Enter user name\"\n            />\n            <FormFeedback>\n              {validationUsernameMsg ? validationUsernameMsg : \"\"}\n            </FormFeedback>\n          </FormGroup>\n          <FormGroup>\n            <Label for=\"favouriteTeam\">Favourite team</Label>\n            <Input\n              type=\"select\"\n              name=\"favourite\"\n              id=\"favourite\"\n              placeholder=\"Select favourite team\"\n              onChange={event => {\n                setFavourite(event.target.value);\n              }}\n              value={favourite}\n            >\n              {Object.keys(allTeams).map((teamName, key) => (\n                <option key={key}>{teamName}</option>\n              ))}\n            </Input>\n          </FormGroup>\n          <FormGroup>\n            <Label for=\"email\">Email</Label>\n            <Input\n              invalid={validationEmailMsg ? true : false}\n              type=\"email\"\n              onChange={handleInputChange}\n              name=\"email\"\n              value={email}\n              placeholder=\"Enter email\"\n            />\n            <FormFeedback>\n              {validationEmailMsg ? validationEmailMsg : \"\"}\n            </FormFeedback>\n          </FormGroup>\n\n          <FormGroup>\n            <Label for=\"password\">Pasword</Label>\n            <Input\n              invalid={validationPasswordMsg ? true : false}\n              type=\"password\"\n              onChange={handleInputChange}\n              name=\"password\"\n              maxLength={100}\n              minLength={6}\n              value={password}\n              placeholder=\"Enter password\"\n            />\n            <FormFeedback>\n              {validationPasswordMsg ? validationPasswordMsg : \"\"}\n            </FormFeedback>\n          </FormGroup>\n          <div>\n            <div>Your password must contain:</div>\n            <ul>\n              <li>At least six characters</li>\n              <li>At least one number</li>\n              <li>At least a capital letter</li>\n              <li>At least a lower case letter</li>\n              <li>At least a special character</li>\n            </ul>\n          </div>\n          <Alert color=\"danger\" isOpen={validationMsg ? true : false}>\n            {validationMsg}\n          </Alert>\n          <Button color=\"secondary\" type=\"submit\" className=\"Login_btn\">\n            Sign Up\n          </Button>\n        </Form>\n      </ModalBody>\n      <ModalFooter className=\"Login_footer\">\n        Already have an account ?\n        <Link to=\"/login\" style={{ padding: \"5px 10px\" }}>\n          login\n        </Link>\n      </ModalFooter>\n    </Modal>\n  );\n}\nexport default connect()(SignUp);\n","import React, { useEffect } from \"react\";\nconst keysMaping = {\n  season: \"Season\",\n  date: \"Date\",\n  team1: \"First Team\",\n  team2: \"Second Team\",\n  toss_winner: \"Toss winner team\",\n  toss_decision: \"Toss decision\",\n  result: \"Result\",\n  dl_applied: \"Dl applied\",\n  winner: \"Winner\",\n  win_by_runs: \"Win by runs\",\n  win_by_wickets: \"Win by wickets\",\n  player_of_match: \"Player of match\",\n  venue: \"Venue\",\n  city: \"City\",\n  umpire1: \"Umpire1\",\n  umpire2: \"Umpire2\",\n  umpire3: \"Umpire3\"\n};\n\nconst ItemDetail = props => {\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [props.location]);\n  if (props.location && !props.location.state) {\n    props.history.push(\"/home\");\n    return <div></div>;\n  } else {\n    const { item } = props.location.state;\n    return (\n      <div className=\"ItemDetail Home\">\n        <div className=\"ItemDetail_body\">\n          <h4 className=\"title\">MATCH DETAILS</h4>\n          {[\n            \"season\",\n            \"date\",\n            \"team1\",\n            \"team2\",\n            \"venue\",\n            \"city\",\n            \"toss_winner\",\n            \"toss_decision\",\n            \"result\",\n            \"dl_applied\",\n            \"winner\",\n            \"win_by_runs\",\n            \"win_by_wickets\",\n            \"player_of_match\",\n            \"umpire1\",\n            \"umpire2\",\n            \"umpire3\"\n          ].map((key, index) => (\n            <div className=\"ItemDetail_body_row\" key={index}>\n              <h6 className=\"key\">{keysMaping[key]}</h6>\n              <h5 className=\"value\">{item[key]}</h5>\n            </div>\n          ))}\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default ItemDetail;\n","import React, { useEffect, useState } from \"react\";\nimport { Button, Form, FormGroup, Label, Input, Alert } from \"reactstrap\";\nimport { connect } from \"react-redux\";\n\nimport APICaller from \"utils/APICaller\";\nimport { allTeams } from \"utils/common\";\nimport { updateLoadingAction } from \"redux/actions/loading\";\nimport { saveUser } from \"redux/actions/user\";\n\n// @ts-ignore\nimport colors from \"assets/css/colors.scss\";\n\nconst { theme } = colors;\n\nconst Profile = props => {\n  const { username, email, favourite_team } = props.user;\n  const [favourite, setFavourite] = useState(favourite_team);\n  const [validationMsg, setValidationMsg] = useState(\"\");\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [props.location]);\n  useEffect(() => {\n    setFavourite(favourite_team);\n  }, [favourite_team]);\n  const handleSubmit = ev => {\n    ev.preventDefault();\n\n    const formData = {\n      email,\n      favourite_team: favourite\n    };\n    props.dispatch(updateLoadingAction(true));\n    APICaller({\n      method: \"POST\",\n      reqUrl: \"users/update\",\n      data: formData\n    })\n      .then(res => {\n        props.dispatch(updateLoadingAction(false));\n        localStorage.setItem(\n          \"user\",\n          JSON.stringify({ ...props.user, favourite_team: favourite })\n        );\n\n        props.dispatch(saveUser({ ...props.user, favourite_team: favourite }));\n        props.history.push(\"/home\");\n      })\n      .catch(err => {\n        props.dispatch(updateLoadingAction(false));\n        setValidationMsg(\"Oops! something went wrong\");\n      });\n  };\n\n  return (\n    <div className=\"Profile  Home\">\n      <div className=\"Profile_body ItemDetail_body\">\n        <h4 className=\"title\">MY PROFILE</h4>\n        <Form onSubmit={handleSubmit}>\n          <FormGroup>\n            <Label for=\"email\">User name</Label>\n            <Input\n              disabled\n              type=\"text\"\n              name=\"username\"\n              maxLength={20}\n              minLength={3}\n              value={username}\n              placeholder=\"Enter user name\"\n            />\n          </FormGroup>\n          <FormGroup>\n            <Label for=\"email\">Email</Label>\n            <Input\n              disabled\n              type=\"email\"\n              name=\"email\"\n              value={email}\n              placeholder=\"Enter email\"\n            />\n          </FormGroup>\n\n          <FormGroup>\n            <Label for=\"favouriteTeam\">Favourite team</Label>\n            <Input\n              type=\"select\"\n              name=\"favourite\"\n              id=\"favourite\"\n              placeholder=\"Select favourite team\"\n              onChange={event => {\n                setFavourite(event.target.value);\n              }}\n              value={favourite}\n            >\n              {Object.keys(allTeams).map((teamName, key) => (\n                <option key={key}>{teamName}</option>\n              ))}\n            </Input>\n          </FormGroup>\n          <Alert color=\"danger\" isOpen={validationMsg ? true : false}>\n            {validationMsg}\n          </Alert>\n          <Button\n            color=\"secondary\"\n            type=\"submit\"\n            // className=\"Login_btn\"\n            style={{\n              width: \"100%\",\n              margin: \"10px 0 20px\",\n              border: 0,\n              fontWeight: \"bold\",\n              backgroundColor: favourite_team\n                ? allTeams[favourite_team].color\n                : theme\n            }}\n          >\n            SAVE\n          </Button>\n        </Form>\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = state => {\n  return {\n    user: state.userReducer\n  };\n};\nexport default connect(mapStateToProps)(Profile);\n","import React, { useEffect, useState } from \"react\";\nimport {\n  Button,\n  Form,\n  FormGroup,\n  Label,\n  FormFeedback,\n  Alert,\n  CustomInput\n} from \"reactstrap\";\nimport { connect } from \"react-redux\";\n\nimport APICaller from \"utils/APICaller\";\nimport { allTeams, allVenue } from \"utils/common\";\nimport { updateLoadingAction } from \"redux/actions/loading\";\nimport { isEmptyString } from \"utils/validators\";\n\n// @ts-ignore\nimport colors from \"assets/css/colors.scss\";\n\nconst { theme } = colors;\n\nconst PredictResult = props => {\n  const { favourite_team } = props;\n  const [firstTeam, setFirstTeam] = useState(\"\");\n  const [validationFirstTeamMsg, setValidationFirstTeamMsg] = useState(false);\n  const [secondTeam, setSecondTeam] = useState(\"\");\n  const [validationSecondTeamMsg, setValidationSecondTeamMsg] = useState(false);\n  const [venu, setVenu] = useState(\"\");\n  const [validationVenuMsg, setValidationVenuMsg] = useState(false);\n  const [tossWinner, setTossWinner] = useState(\"\");\n  const [validationTossWinnerMsg, setValidationTossWinnerMsg] = useState(false);\n  const [validationMsg, setValidationMsg] = useState(\"\");\n\n  const [result, setResult] = useState(\"\");\n  const onDismiss = () => setResult(\"\");\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [props.location]);\n\n  const handleSubmit = ev => {\n    ev.preventDefault();\n\n    const isValid = validateForm();\n    if (isValid) {\n      const formData = {\n        team1: firstTeam,\n        team2: secondTeam,\n        venu,\n        toss_winner: tossWinner\n      };\n      var urlParms = Object.entries(formData)\n        .map(([key, val]) => `${key}=${val}`)\n        .join(\"&\");\n\n      props.dispatch(updateLoadingAction(true));\n      setResult(\"\");\n      APICaller({\n        method: \"GET\",\n        reqUrl: `posts/predict?${urlParms}`\n      })\n        .then(res => {\n          props.dispatch(updateLoadingAction(false));\n          [firstTeam, secondTeam].includes(res.data)\n            ? setResult(res.data)\n            : setResult(tossWinner);\n        })\n        .catch(err => {\n          props.dispatch(updateLoadingAction(false));\n          setValidationMsg(\"Oops! something went wrong\");\n        });\n    }\n  };\n\n  const validateForm = touchedElem => {\n    let hasInValidFirstTeam = \"\",\n      hasInValidSecondTeam = \"\",\n      hasInValidVenu = \"\",\n      hasInValidTossWinner = \"\";\n    if (!touchedElem) {\n      hasInValidFirstTeam = isEmptyString(firstTeam);\n      hasInValidSecondTeam = isEmptyString(secondTeam);\n      hasInValidVenu = isEmptyString(venu);\n      hasInValidTossWinner = isEmptyString(tossWinner);\n      setValidationFirstTeamMsg(hasInValidFirstTeam);\n      setValidationSecondTeamMsg(hasInValidSecondTeam);\n      setValidationVenuMsg(hasInValidVenu);\n      setValidationTossWinnerMsg(hasInValidTossWinner);\n    } else {\n      setValidationFirstTeamMsg(false);\n      setValidationSecondTeamMsg(false);\n      setValidationVenuMsg(false);\n      setValidationTossWinnerMsg(false);\n    }\n    if (\n      !firstTeam ||\n      !secondTeam ||\n      !venu ||\n      !tossWinner ||\n      hasInValidFirstTeam ||\n      hasInValidSecondTeam ||\n      hasInValidVenu ||\n      hasInValidTossWinner\n    ) {\n      return false;\n    }\n    return true;\n  };\n  let secondTeamOption = Object.keys(allTeams).filter(\n    team => team !== firstTeam\n  );\n  return (\n    <div className=\"Profile  Home\">\n      <div className=\"Profile_body ItemDetail_body\">\n        <h4 className=\"title\">PREDICT RESULT</h4>\n        <Form onSubmit={handleSubmit}>\n          <FormGroup>\n            <Label for=\"favouriteTeam\">First Team</Label>\n            <CustomInput\n              invalid={validationFirstTeamMsg ? true : false}\n              type=\"select\"\n              name=\"firstTeam\"\n              id=\"firstTeam\"\n              onChange={event => {\n                setFirstTeam(event.target.value);\n                if (event.target.value === secondTeam) {\n                  setSecondTeam(\"\");\n                }\n                validateForm(event.target.name);\n              }}\n              value={firstTeam}\n            >\n              <option value=\"\">Slect first team</option>\n              {Object.keys(allTeams).map((teamName, key) => (\n                <option key={key}>{teamName}</option>\n              ))}\n            </CustomInput>\n            <FormFeedback>\n              {validationFirstTeamMsg ? validationFirstTeamMsg : \"\"}\n            </FormFeedback>\n          </FormGroup>\n          <FormGroup>\n            <Label for=\"favouriteTeam\">Second team</Label>\n            <CustomInput\n              invalid={validationSecondTeamMsg ? true : false}\n              type=\"select\"\n              name=\"secondTeam\"\n              id=\"secondTeam\"\n              onChange={event => {\n                setSecondTeam(event.target.value);\n                validateForm(event.target.name);\n              }}\n              value={secondTeam}\n            >\n              <option value=\"\">Select second team</option>\n              {secondTeamOption.map((teamName, key) => (\n                <option key={key}>{teamName}</option>\n              ))}\n            </CustomInput>\n            <FormFeedback>\n              {validationSecondTeamMsg ? validationSecondTeamMsg : \"\"}\n            </FormFeedback>\n          </FormGroup>\n          <FormGroup>\n            <Label for=\"favouriteTeam\">Venu</Label>\n            <CustomInput\n              invalid={validationVenuMsg ? true : false}\n              type=\"select\"\n              name=\"venu\"\n              id=\"venu\"\n              onChange={event => {\n                setVenu(event.target.value);\n                validateForm(event.target.name);\n              }}\n              value={venu}\n            >\n              <option value=\"\">Select venue</option>\n              {allVenue.map((venuName, key) => (\n                <option key={key}>{venuName}</option>\n              ))}\n            </CustomInput>\n            <FormFeedback>\n              {validationVenuMsg ? validationVenuMsg : \"\"}\n            </FormFeedback>\n          </FormGroup>\n          <FormGroup>\n            <Label for=\"favouriteTeam\">Toss winner team</Label>\n            <CustomInput\n              invalid={validationTossWinnerMsg ? true : false}\n              type=\"select\"\n              name=\"tossWinner\"\n              id=\"tossWinner\"\n              onChange={event => {\n                setTossWinner(event.target.value);\n                validateForm(event.target.name);\n              }}\n              value={tossWinner}\n            >\n              <option value=\"\">\n                {firstTeam && secondTeam\n                  ? \"Select toss winner team\"\n                  : \"First select team1 and team2\"}\n              </option>\n              {firstTeam && secondTeam\n                ? [firstTeam, secondTeam].map((teamName, key) => (\n                    <option key={key}>{teamName}</option>\n                  ))\n                : void 0}\n            </CustomInput>\n            <FormFeedback>\n              {validationTossWinnerMsg ? validationTossWinnerMsg : \"\"}\n            </FormFeedback>\n          </FormGroup>\n\n          <Alert color=\"danger\" isOpen={validationMsg ? true : false}>\n            {validationMsg}\n          </Alert>\n          <Button\n            color=\"secondary\"\n            type=\"submit\"\n            // className=\"Login_btn\"\n            style={{\n              width: \"100%\",\n              margin: \"10px 0 20px\",\n              border: 0,\n              fontWeight: \"bold\",\n              backgroundColor: favourite_team\n                ? allTeams[favourite_team].color\n                : theme\n            }}\n          >\n            PREDICT\n          </Button>\n        </Form>\n        <Alert color=\"success\" isOpen={result} toggle={onDismiss}>\n          <h4 className=\"alert-heading\">Chances of winning</h4>\n          <hr />\n          <p className=\"mb-0\">{result}</p>\n        </Alert>\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = state => {\n  return {\n    favourite_team: state.userReducer.favourite_team\n  };\n};\nexport default connect(mapStateToProps)(PredictResult);\n","import React, { useEffect } from \"react\";\nimport { Route, Redirect, Switch } from \"react-router-dom\";\nimport isEmpty from \"lodash/isEmpty\";\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nimport Layout from \"./layouts/Layout\";\nimport Home from \"./Home\";\nimport Login from \"./Login\";\nimport SignUp from \"./SignUp\";\nimport ItemDetail from \"./ItemDetail\";\nimport Profile from \"./Profile\";\nimport PredictResult from \"./PredictResult\";\n\nimport APICaller from \"utils/APICaller\";\nimport { updateLoadingAction } from \"redux/actions/loading\";\nimport { saveUser, logout } from \"redux/actions/user\";\nimport { routeMainStack } from \"utils/common\";\n\nconst Root = props => {\n  const {\n    history,\n    dispatch,\n    location: { pathname }\n  } = props;\n  useEffect(() => {\n    const user = JSON.parse(localStorage.getItem(\"user\"));\n    if (!isEmpty(user)) {\n      dispatch(saveUser(user));\n      dispatch(updateLoadingAction(true));\n      APICaller({\n        method: \"GET\",\n        reqUrl: \"users/isloggedin\"\n      })\n        .then(res => {\n          delete res.data._id;\n          dispatch(saveUser(res.data));\n          if (res.data.favourite_team !== user.favourite_team) {\n            localStorage.setItem(\n              \"user\",\n              JSON.stringify({\n                ...user,\n                favourite_team: res.data.favourite_team\n              })\n            );\n          }\n          dispatch(updateLoadingAction(false));\n          !routeMainStack.includes(pathname) && history.push(\"/home\");\n        })\n        .catch(err => {\n          dispatch(updateLoadingAction(false));\n          history.push(\"/login\");\n          if (err.response && err.response.data === \"Unauthorized\") {\n            dispatch(logout());\n          }\n        });\n    } else {\n      history.push(\"/login\");\n    }\n    // eslint-disable-next-line\n  }, []);\n  return (\n    <Layout>\n      <Switch>\n        <Route path=\"/login\" exact component={Login} />\n        <Route path=\"/signup\" exact component={SignUp} />\n\n        <Route path=\"/home\" exact component={Home} />\n        <Route path=\"/item-detail\" exact component={ItemDetail} />\n        <Route path=\"/profile\" exact component={Profile} />\n        <Route path=\"/predict-result\" exact component={PredictResult} />\n\n        <Redirect to=\"/login\" />\n      </Switch>\n    </Layout>\n  );\n};\n\nconst RootWithRouter = withRouter(props => <Root {...props} />);\nexport default connect()(RootWithRouter);\n","import { all, call, put, takeLatest, select } from \"redux-saga/effects\";\nimport ActionTypes from \"../constants/ActionTypes\";\nimport APICaller from \"utils/APICaller\";\n\nexport function* getItems() {\n  const filters = yield select(state => state.itemsReducer.filters);\n  let { search = \"\", sort = \"\", order = \"\", limit = 20, skip = 0 } = filters;\n  let url = `posts?limit=${limit}`;\n  if (search.length || sort.length || order.length || skip) {\n    search = search.trim().toLowerCase();\n    sort = order === \"desc\" ? `-${sort}` : sort;\n    url = `${url}&filter=${search}&sort=${sort}&skip=${skip}`;\n  }\n  try {\n    const response = yield call(APICaller, { method: \"GET\", reqUrl: url });\n    yield put({\n      type: ActionTypes.GET_ITEMS_SUCCESS,\n      payload: response.data\n    });\n  } catch (err) {\n    yield put({\n      type: ActionTypes.GET_ITEMS_FAILURE,\n      payload: []\n    });\n  }\n}\n\nexport default function* root() {\n  yield all([takeLatest(ActionTypes.GET_ITEMS, getItems)]);\n}\n","import { all, fork } from \"redux-saga/effects\";\n\n// import user from \"./user\";\nimport getItems from \"./getItem\";\n\nexport default function* root() {\n  yield all([fork(getItems)]);\n}\n","import ActionTypes from \"../constants/ActionTypes\";\n\nconst initialState = { loadState: false };\nconst loadingReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ActionTypes.UPDATE_LOADING:\n      return { loadState: action.payload };\n    default:\n      return state;\n  }\n};\n\nexport default loadingReducer;\n","import ActionTypes from \"../constants/ActionTypes\";\n\nconst initialState = {\n  items: [],\n  itemsApiInProgress: false,\n  totalItemCount: 1,\n  filters: {\n    search: \"\",\n    sort: \"\",\n    order: \"\",\n    limit: 20,\n    skip: 0\n  }\n};\n\nconst itemsReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ActionTypes.GET_ITEMS:\n      return Object.assign({}, state, {\n        itemsApiInProgress: true\n      });\n    case ActionTypes.GET_ITEMS_FAILURE:\n      return Object.assign({}, state, {\n        itemsApiInProgress: false\n      });\n    case ActionTypes.GET_ITEMS_SUCCESS:\n      return Object.assign({}, state, {\n        items: [...state.items, ...action.payload[0]],\n        totalItemCount: action.payload[1],\n        itemsApiInProgress: false,\n        filters: {\n          ...state.filters,\n          skip: state.filters.skip + state.filters.limit\n        }\n      });\n    case ActionTypes.CLEAR_ITEMS_LIST:\n      return Object.assign({}, state, {\n        items: []\n      });\n    case ActionTypes.ITEMS_FILTER_CHANGE: {\n      return Object.assign({}, state, {\n        filters: { ...state.filters, ...action.payload }\n      });\n    }\n    default:\n      return state;\n  }\n};\n\nexport default itemsReducer;\n","import ActionTypes from \"../constants/ActionTypes\";\n\nconst initialState = {\n  email: \"\",\n  favourite_team: \"\",\n  token: \"\",\n  username: \"\"\n};\n\nconst userReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ActionTypes.SAVE_USER:\n      return {\n        ...state,\n        ...action.payload\n      };\n\n    case ActionTypes.USER_LOGOUT:\n      localStorage.clear();\n      return {\n        ...initialState\n      };\n    default:\n      return state;\n  }\n};\n\nexport default userReducer;\n","import { combineReducers } from \"redux\";\n\nimport loadingReducer from \"./loading\";\nimport itemsReducer from \"./items\";\nimport userReducer from \"./user\";\n\nconst rootReducer = combineReducers({\n  loadingReducer,\n  itemsReducer,\n  userReducer\n});\n\nexport default rootReducer;\n","import { createStore, applyMiddleware } from \"redux\";\nimport createSagaMiddleware from \"redux-saga\";\n\nimport rootsaga from \"./sagas\";\nimport rootReducer from \"./reducer\";\n\nconst sagaMiddleware = createSagaMiddleware();\nconst store = createStore(rootReducer, applyMiddleware(sagaMiddleware));\nsagaMiddleware.run(rootsaga);\n\nexport default store;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter, HashRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\n\nimport \"react-virtualized/styles.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nimport \"./assets/css/styles.scss\";\nimport \"./assets/css/styles-xs.scss\";\n\nimport App from \"./containers/Root\";\nimport store from \"./redux/store\";\n\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <HashRouter basename=\"/\">\n      <App />\n    </HashRouter>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}